[{"categories":null,"contents":"","permalink":"https://resources.taiga.io/categories/","tags":null,"title":"Categories"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/features/","tags":null,"title":"Features"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/categories/modules/","tags":null,"title":"modules"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/categories/reporting/","tags":null,"title":"reporting"},{"categories":["modules","reporting"],"contents":"Taiga focuses on soft reporting across the entire platform plus convenient API and live CSV exports.\nWhen you think about reporting, you almost inevitably visualise charts and progress bars, shiny metrics that provide you with a feeling that you have everything under control.\nTaiga took a different approach right from the beginning. Instead of trying to please everyone with a reporting module, we decided to allow teams to use their favourite reporting tool and integrate it with Taiga\u0026rsquo;s API or Live CSV exports and instead focus on soft reporting across the entire platform.\nThis soft reporting has two major advantages:\n It\u0026rsquo;s there for the whole team provided they have a say in the project (their assigned role permissions would be a hint to this). It becomes part of the process and the associated cognitive load remains quite low.  OK, let\u0026rsquo;s see how Taiga\u0026rsquo;s soft reporting approach works.\nProject soft reporting Timeline A project\u0026rsquo;s timeline is a quick and convenient way to assess recent updates on the project. It\u0026rsquo;s infinte scroll allows you to go past the latest notifications and explore older news about the project. You can access the project\u0026rsquo;s timeline simply by clicking on the Project\u0026rsquo;s logo on the project\u0026rsquo;s sidebar.\n A sample project\u0026rsquo;s timeline where team members' activities and integrations are shown.\n  Scrum backlog Scrum is on of the leading Agile techniques and one of the reasons of its success is the project burndown\u0026rsquo;s artifact, which shows at what rate an estimated backlog is dealt with across previous sprints. Taiga allows you to set-up an overall project\u0026rsquo;s user story points and number of sprints you can establish a deadline and a target for such completion.\n A project\u0026rsquo;s backlog and its scrum burndown showing sprint points velocity.\n  Sprint taskboard burndown In Scrum, workloads are split into successive sprints. These sprints represent the team\u0026rsquo;s committment and, therefore, benefit from some visual tracking of what\u0026rsquo;s finished or still in progress. That is why Taiga has a specific Sprint taskboard burndown panel where everyone can track the rate at which user stories and tasks are finished per day. This allows for quick diagnose on the sprint\u0026rsquo;s health.\n A sprint burndown might look like this, specially if effort is put into early closure of user stories' tasks.\n  KANBAN zoom level Taiga\u0026rsquo;s KANBAN module allows for four different zoom levels. You can go from Compact to Expanded and enjoy different amounts of information. In particular, we would like to highlight the importance of the Compact mode where KANBAN cards are reduced to their core essence and can help identify upcoming challenges. Are WIP limits being implemented and enforced? Is there a disproportionate number of tasks assigned to one person? Is there a KANBAN column with too many blocked cards? Should a particular KANBAN column be flagged as Archived under SETTINGS so that it doesn\u0026rsquo;t load its historical content?\n Both ends of the zoom\u0026rsquo;s spectrum for KANBAN. Note how the left one gives instant visual information.\n  Epics with multiproject support Taiga\u0026rsquo;s Epics Module can serve to track grand themes across user stories (or KANBAN cards) in a project. After all, and Epic can be viewed as a sophisticated container with its own lifecycle that gets updated every time a child user story changes its progress. This can be crucial for some people that don\u0026rsquo;t need to acre about specific work items but overarching project modules or goals. Even better, Taiga supports multiproject Epics, meaning that you can use an Epic to track user stories belonging to the same project but also to any other project where you have appropriate VIEW permissions for user stories.\nMultiproject Epics can be useful in scenarios where multiple projects' progress feed into a bigger strategic project.\n A sample Epics module with three epics, one of them expanded and showing multiproject user stories and its progress.\n  Work item soft reporting There is much value in having the work item, whether it\u0026rsquo;s a user story, a KANBAN card, an issue or an Epic, speak for itself and its lifecycle. Particularly, when Taiga follows a \u0026ldquo;Don\u0026rsquo;t ask for permission, ask for forgiveness\u0026rdquo; poilicy when it comes to workflows and permissions. The detail view for any Taiga object strives for autonomy and comprehensive information. It\u0026rsquo;s imperative that the Taiga object can radiate information in an elegant way. Here are three ways this happens.\nActivity Every Taiga object, from Wiki page to Epic, sports an Activities at the bottom where every major item change is logged. It\u0026rsquo;s meant to be a human-friendly log where even changes to text fields can be dissected.\n A user story activities pane displaying different changes by different people, including a newly created custom field.\n  Notification level As a Taiga user you can setup your particular notification scheme per project. There are three tiers. Receive All, Only involved and No Notifications. You can access this on NOTIFICATIONS menu entry under your profile picture at the top.\nWhen you select Only involved (this is the default) for any project, Taiga will send you an email each time there is a significant change on a Taiga object you\u0026rsquo;re assigned to or you\u0026rsquo;re watching. You can setup a similar approach for Desktop and Notification bell under DESKTOP NOTIFICATIONS and EVENTS.\nTeam member soft reporting Sometimes it\u0026rsquo;s just curiosity, some other times accountability is the key driver but more often than not, there is an interesting narrative around what team members do in a project or what they are watching. Putting that into a bigger context also helps to understand the different team dynamics.\nUser profile Every Taiga user has a profile page. You can access your own here and see what is being logged about your activity. Nothing really should surprise you and you probably prefer to stick to your personal Dashboard but the nice thing about this user profile is that it\u0026rsquo;s accessible to other Taiga users if there is some work overlap between you and them. Whatever is inaccessible to them as Taiga users will not be shown on your profile. You can access other people\u0026rsquo;s profile simply by clicking on their names or mentions.\n An example of a personal profile page, showing the watched items in this case.\n  Sprint Taskboard and KANBAN Filters Taiga has a very flexible filter system that you can tweak in many ways. What\u0026rsquo;s more, you can save particular filters into your private filters list. This means you can add a filter for your own assigned but not closed tasks on a sprint taskboard or for the blocked and assigned to a team member KANBAN cards. This allows every to suddenly focus on a particular workload (and achievements) of one or various team members.\n This KANBAN has \u0026lsquo;assigned to The Princess Bride\u0026rsquo; filter activated.\n  Team page Lastly, as a fun way to award badges to team members, you can visit the Team page from time to time and see how the team members fare across the different categories. It takes different types of activity and ranks them across the team, giving each member a total power score. You can use this for kudos or to check whether there is a fundamental inbalance between team members in the project.\n A very diverse team with a nicely distributed project \u0026lsquo;power\u0026rsquo;.\n  Final remarks, your feedback is much appreciated At Taiga, we are always trying to find out correct ways to convey and channel project\u0026rsquo;s progress and context in ways that not necessarily require charts and histograms. At the same time, there is information that might need specific ways to address visual management requirements. Please contact us at support@taiga.io (suggested subject \u0026ldquo;Roadmap interview\u0026rdquo;) with your particular requests and be part of the next major Taiga release.\n","permalink":"https://resources.taiga.io/features/reporting/","tags":null,"title":"Taiga reporting capabilities for managing teams \u0026 projects"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/","tags":null,"title":"Taiga Resources"},{"categories":["Extend Taiga","reporting"],"contents":"In Taiga you can make reports with some data and graph about your projects. To do that you can use your favorite spreadsheet app and the information about your user stories, tasks and issues in csv (comma-separated values) format.\nYou can obtain the information like a csv file or like a csv data url, one for epics, one for user stories, other for tasks and other for issues.\nGet a csv file:  Go to Admin \u0026gt; Project \u0026gt; Reports.  CSV Reports - Step 1\n   Click Generate URL link if url doesn\u0026rsquo;t exist yet.  CSV Reports - Step 2\n   Click Download CSV buttton to start the download of the csv file.  \u0026hellip;in LibreOffice  Use the \u0026ldquo;Download csv\u0026rdquo; button and get a local copy of the file Click Insert \u0026gt; Sheet from file Enable the link option and click browse for selecting the downloaded file  CSV Reports in LibreOffice\n    Use csv data url\u0026hellip;  Go to Admin \u0026gt; Project \u0026gt; Reports. Click Generate URL link if url doesn\u0026rsquo;t exist yet. Copy the url (the icon on the right of the input is useful to select all text before press Ctrl+C).  \u0026hellip;in Google Docs  Create a new spreadsheet document. Use the function IMPORTDATA() with the generated URL and press ENTER.  CSV Reports - Google Drive - Step 1\n   The information will appear automatically.  CSV Reports - Google Drive - Step 2\n    Remember that you can share the url but you should note that anyone who knows it can download a report with no further authentication.\nYou can expire an url by regenerating it because only the last generated url will be valid for each type. You can also delete it if you prefer.\n","permalink":"https://resources.taiga.io/extend/csv-reports/","tags":null,"title":"CSV reports"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/categories/extend-taiga/","tags":null,"title":"Extend Taiga"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/extend/","tags":null,"title":"Extends"},{"categories":null,"contents":"If you\u0026rsquo;re new to Taiga and would like to invite your team to the platform, you need to do so after you have created a project. Once you have created a project, you can go to SETTINGS\u0026gt;MEMBERS and add them. Invites will be sent by Taiga to all of them to join both Taiga and your project. If you invite team members that are already Taiga users, they will be immediately added to the project and they will get notified as well.\nInviting team members to Taiga requires inviting team members to at least one project where you have ADMIN or OWNER status, that is, you can access the SETTINGS panel for that project. Once they have a valid Taiga user, they can be invited to many other projects and they can use Taiga based on their account type.\n","permalink":"https://resources.taiga.io/faqs/invite-team/","tags":null,"title":"How can I invite my team over to Taiga?"},{"categories":null,"contents":"Transferring the project ownership of a project is possible both ways; someone with Admin status requests the project ownership or some project owner invites a project ember to become the new project owner.\nThis is done by accessing the Request ownership / Transfer ownership option under SETTINGS \u0026gt; PROJECT DETAILS. It will trigger a request for confirmation to the other party, who can accept or decline the petition.\nSince the difference between Project Owner and Admin status is just formal (both roles can do almost everything), you don\u0026rsquo;t need to transfer a project for any practical reasons. This action is usually linked to a project owner leaving the project or the company in which such project is managed. On tree.taiga.io, it is relevant for the billing information, since only project owners are considered potentially billable (depending on their account type).\n","permalink":"https://resources.taiga.io/faqs/transfer-project/","tags":null,"title":"How can project ownership be transferred?"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/categories/customisation/","tags":null,"title":"customisation"},{"categories":["customisation"],"contents":"Under Project SETTINGS, you have probably seen the Public/Private toggle button. Also, upon project creation you are asked about this.\nPrivate projects are projects that are accessible only to project members. You still have the option to allow for other Taiga users or anonymous users (including search engines) to interact with the project if you allow for that using the External User role under SETTINGS \u0026gt; PERMISSIONS, but this is not enabled by default.\nPublic projects are projects that are forced to be at least viewable for non members and anonymous users (including search engines) through External user role. They also show up under Taiga\u0026rsquo;s DISCOVER page.\nThe configuration flexibility allows for some overlap. You decide what\u0026rsquo;s best for your project. Please note, Public Projects do not count for the paid plans on taiga.io, they are always free of charge regardless of team size or number of public projects.\n","permalink":"https://resources.taiga.io/faqs/differencepublicprivate/","tags":null,"title":"What's the difference between public and private projects?"},{"categories":["scrum"],"contents":"Scrum is an agile framework for developing, delivering, and sustaining complex products. Although it had an initial emphasis on software development, it has been used in other fields including research, sales, marketing and advanced technologies. It is designed for teams of ten or fewer members, who break their work into goals that can be completed within timeboxed iterations, called sprints, no longer than one month and most commonly two weeks.\nYou can also say that Scrum allows teams and stakeholders to make sure they are delivering the optimal partial product every time even if it\u0026rsquo;s hard to predict what a final product would look like.\nScrum is probably the go-to Agile framework when teams or organisations decide to try an \u0026ldquo;agile on rails\u0026rdquo; experience for the first time. It is also a lifetime\u0026rsquo;s choice for many agile teams.\nTaiga Scrum module Every Taiga project can activate the Scrum module. This also happens automatically if you chose the Scrum template upon project creation. Although it\u0026rsquo;s optionaly, it\u0026rsquo;s strongly suggested that you enter a number of estimated Sprints (fixed time periods) and the project size in points. If in doubt, you can just input 10 for Expected number of Sprints and 100 for Expected number of story points and come back to change them in the future.\n Project settings for the Scrum module\n  When you do this the project\u0026rsquo;s toolbar will show the Scrum icon and you will be able to access the Project\u0026rsquo;s backlog and any ongoing sprint. By default the Scrum statuses are ones that generally fit the software development process but feel free to change them yourself. You can create your own set of Scrum statuses columns by going to SETTINGS \u0026gt; ATTRIBUTES \u0026gt; STATUSES and change USER STORY STATUSES.\n Project attributes setup\n  Scroll down to the USER STORY STATUSES and change the default settings to accomodate your particular use case. If you want your user stories to be considered as done when they reach a particular status, flag that status as Closed. This is very important for Scrum metrics and Taiga makes use of it for various Scrum charts so it\u0026rsquo;s good to give it a thought, you can change this at any time. In Scrum you won\u0026rsquo;t typically need to use the Archived flag for a status since the benefit of hiding user stories in that state is not needed here, closed Sprints give you that \u0026ldquo;tidying up\u0026rdquo; mechanism.\nFinally, we suggest you also take a look at the TASK STATUSES right below USER STORY STATUSES and see if you want to change them. Taiga encourages you to split up user stories into maneagable tasks that are usually assigned to just one team member so it\u0026rsquo;s good to select your particular set for more \u0026ldquo;hands-on\u0026rdquo; work items. This has a big impact on how Sprints are managed and viewed as we will later show.\n Project settings related to Task statuses\n  This is the basic setup. You can now go to the Scrum module and start creating user stories in the Backlog prior to adding any new Sprint. You can create one user story at a time and make use of the detailed creation dialog or you can bulk create them and fill in the relevant information at a later time.\nScrum Backlog There are various so called artifacts in Scrum. The top three are the Backlog, the User Stories and the Sprints. They respectively represent what is to be done ordered by priority and readyness, the pieces of work themselves and the fixed time periods in which we put selected User Stories to be worked upon and finished.\nTaiga has two main views for Scrum. The first one is the Scrum Backlog screen. Here you see three major blocks. The Burndown chart (central top pane) which keeps track of your team\u0026rsquo;s velocity, the Backlog (central bottom pane), were future work (User Stories) are frequently added and both open and closed Sprints (right pane).\n Backlog view using the Scrum module\n  This Backlog view conveys a lot of information but Taiga tries to make the visual and mental loads easy to cope with. We can\u0026rsquo;t fast forward this process for you but we can help you understand how all three blocks are related to one another at any stage of the project.\nThe Backlog or Product Backlog can grow indefinetly as long as the top placed user stories enjoy highest priority and are \u0026ldquo;ready\u0026rdquo; to start working on then. You can arrange user story priorities by simply dragging and dropping them in the Backlog. Click on single user stories to fill in all the relevant information so the team can decide they are ready for an upcoming sprint. It is somewhat challenging to consider a user story ready for a Sprint if the team hasn\u0026rsquo;t at least filled in Title, Description and Points. Optional but really valuable are the user story\u0026rsquo;s tasks and attachments or custom fields.\nUser Story Points in Taiga are a measure of the overall complexity of a User Story. Take advantage of Taiga cross-functional capabilities to set up which team roles are allowed to partially contribute to the total user story points. You can do that under SETTINGS \u0026gt; PERMISSIONS when you activate the estimation flag for a selection of your team roles. User Story points are one of the most challenging aspects of Scrum, be sure to read Scrum, the Dark Side.\nNote that you can have different user stories statuses applicable when they belong to the Backlog. The three most common Backlog-friendly user story statuses are something like New, Ready or Needs info. The remaining of the user stories workflow typically happen within a Sprint.\nNext, under the Sprints pane, create a new Sprint, select a descriptive title and start and end dates. You can assign user stories from the Backlog to this Sprint by dragging and dropping them. If you multiple-select various user stories in the backlog, you can drag and drop them together after multiple-selecting them or use the handy \u0026ldquo;Move to Current Sprint\u0026rdquo; action.\n An example of an already filled-in ongoing sprint\n  Congratulations! You have your first Sprint set up for work!\nThe Burndown chart will still look a bit boring but that will change the moment user stories are closed. This chart\u0026rsquo;s role is quite simple and yet crucial. It will show how much progress in terms of closed user story points is being made sprints after sprint. It helps you predict whether you will be able to smash the project\u0026rsquo;s estimated total points by the end of the last sprint or not. It shows an average velocity for you to compare against but teams normally get a rather non-straight Burndown chart.\n A very simple 4-sprint Scrum burndown chart\n  Scrum Sprints The Scrum Backlog view will always show a summary view of ongoing or closed Sprints but teams generally stick to the Sprint Taskboard view when they are focused on getting things done for that Sprint. Click on either the Sprint name or the \u0026ldquo;Sprint Taskboard\u0026rdquo; button so you can access the very important Sprint Taskboard. Open Sprints appear as shortcuts through the left navigation pane\u0026rsquo;s Scrum icon.\n Sprint taskboard showcasing some user stories and their tasks\n  The Sprint Taskboard is quite flexible and it\u0026rsquo;s a good example of \u0026ldquo;visual management\u0026rdquo;, meaning that is radiates information for the entire team. User Stories are kept to the left and the bigger part of the Taskboard is devoted to a KANBAN-style pipeline for tasks. Those tasks are the individual work components through which user stories are carried out and they enjoy their specific tasks workflow, which can be inspired or not by user stories workflow, as they are separate.\nPlease note that whenever all tasks belonging to a user story are in a Closed state, such user story counts as closed for metrics and velocity regardless of the particular user story status. Speaking of which, the Taskboard has its particular Burndown chart, which keeps track of how fast the team is closing user stories before the end of the Sprint and the traditional Sprint Demo event. It\u0026rsquo;s hidden by default but you can expand it clicking on the histogram icon.\n A sprint with a burndown chart waiting to see actual progress\n  What is always visible is the Sprint stats. For that, Taiga uses a simple bar section at the top. It is pretty self-explanatory but there are two icons that are worth mentioning. The opposed arrows icon allows a team to send any sprint\u0026rsquo;s unfinished work to any other open sprint, effectively closing the origin sprint. It\u0026rsquo;s quite handy although we hope you don\u0026rsquo;t need to use it very often. The poison icon if there just to keep track of the number of tasks labelled as Iocaine by their assignees. Please check out what is Iocaine and why you should use it to declare when a task is particularly challenging for the assigned team member.\nTeam members can collapse both user stories and tasks statuses so that they are pleased with a better use of their screen real estate.\nScrum filters and search options Whether you are at the Backlog screen or the Sprint taskboard screen, you might want to use the built-in search or filter capabilities.\n Sprint taskboard with filters applied\n  Simply click on Filters and fiddle with include/exclude criteria with live reaction from the Backlog or the Sprint Taskboard. You can remove them at any time or create a custom filter for future use, one click away.\nYou can also combine it with the search box that will try to be as smart as possible and show matching content only.\nSprint taskboard zoom levels A Sprint taskboard radiates information to all team members and, most importantly, makes sure that everyone shares the same vision.\nHowever, Taiga users are allowed to pick their preferred zoom level for the Sprint taskboard. You can pick from four options: compact, default, detailed and expanded.\nA picture is worth a thousand words, just see how different the same Sprint taskboard can look depending on your zoom level preference.\n Sprint taskboard with expanded zoom vs compact zoom\n  When you prefer more detailed or expanded zoom levels you are asking Taiga to bring more and more information on the content to the front, saving you that extra click to view its detail. Compact or default zoom levels make the Sprint taskboard more of a heat map of sorts and can accommodate more content in one screen.\nOf course, you can change your zoom level preferences at any time. And don\u0026rsquo;t worry, this is your personal Sprint taskboard view, it does not affect other team members personal preferences.\nYou will probably find yourself sticking to a preferred zoom level most of the time while also collapsing user stories you don\u0026rsquo;t need to see, or tasks statuses that you don\u0026rsquo;t manage.\nScrum relationship with Kanban module Taiga is about choice and flexibility while still adhering to basic agile and lean principles. We want you to start using either Scrum or Kanban for your project (or neither and stick with Issues) and later change your mind.\nIn order for Taiga to manage this transition, we decided that a Kanban work item or Kanban card would also be internally considered a Scrum User Story. That way, you can keep all your work regardless of which Agile module you are using.\nActually, you could have both modules, Kanban and Scrum activated and see the same item placed on the Scrum Backlog or a Scrum Sprint and, at the same time, see it on the Kanban board, in a particular swimlane. As the Taiga Team likes to say \u0026ldquo;if you know what you\u0026rsquo;re doing, we\u0026rsquo;re fine\u0026rdquo;.\nBe sure to read Scrum, the Dark Side to know more about potential pitfalls while using Scrum.\n","permalink":"https://resources.taiga.io/features/introscrum/","tags":null,"title":"Quick intro to Scrum module"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/categories/scrum/","tags":null,"title":"scrum"},{"categories":["modules"],"contents":"If you\u0026rsquo;re after a multipurpose and flexible to-do list Taiga module, check Issues. Some teams love Taiga Issues Module so much that they are fine using it without KANBAN or Scrum modules. Actually, Issues Module is clearly the most used Taiga Module, whether it shares room with Scrum or KANBAN modules, to name the two main Taiga pillars. In other words, Scrum and KANBAN modules somehow compete with each other while Issues is happy to work with any of them.\nSo, what makes Issues Module so successful? For one, it puts screen real estate to good use. Its compact yet visual listing allows team members to quickly decide what to do next. Also, filtering and ordering capabilities are handy and quite powerful. Finally, it\u0026rsquo;s very fast and customisable.\nThe simplicity of Issues At first glance, Issues is just a long list of stuff where pagination reigns. It\u0026rsquo;s when you start using it that you find all the hidden gems. You can activate Issues going to SETTINGS \u0026gt; PROJECT \u0026gt; MODULES and clicking on the Issues toggle. You will immediately see the Issues icon pop up at the upper section of the side navigation bar.\n Issues module is activated\n  First of all, Issues can contain any type of work item. Don\u0026rsquo;t be limited to \u0026ldquo;bugs\u0026rdquo;, that\u0026rsquo;s not how we see things here at Taiga. You get a default setup for three Issue types you can always change under SETTINGS \u0026gt; ATTRIBUTES \u0026gt; TYPES. An Issue Type could be a \u0026ldquo;Threat\u0026rdquo;, \u0026ldquo;Purchase order\u0026rdquo; or \u0026ldquo;Sales call\u0026rdquo;, it could be anything as long as it feels like a big enough category for the team. For the rest of this article let\u0026rsquo;s assume you are happy with Bugs, Questions and Enhancements, which is quite common in Engineering Projects.\nIssues is not afraid of super long lists, it\u0026rsquo;s meant to cope with that thanks to its 30 items per page. So be free to bulk-add issues if they fit into the default Issue TYPE category. What Issues requires to be useful for teams is to have some attribute setting per issue. Type is mandatory but so it\u0026rsquo;s Severity and Priority, so wisely choose default values for them under SETTINGS \u0026gt; ATTRIBUTES \u0026gt; [SEVERITIES or PRIORITIES].\nThe default ordering mechanism for Issues unless you click on the other columns is \u0026ldquo;Modified\u0026rdquo;. Any time you create or change an issue, it will bubble up through the list. This means that more active or newer issues appear at the top while long forgotten or closed issues naturally sink in the pagination layout. However, you\u0026rsquo;re one click away to order your zillion issues by Severity or Assigned team member, for example.\nType, Severity and Priority A Task is a task, a User Story is a user story and an Epic is an epic, but an Issue has issue types. At Taiga we think an issue as a simple container that is enriched by type, severity and priority.\n Project settings example for types, severities and priorities\n   Issue Type is a simple major categorisation. Teams tend to pick between 3 and 5 different issue types. This makes early distinction easy and can help manage assignees or workflows. Try to come up with unambiguous issue types that have almost no overlap. Also, it pays off to carefully pick their individual colours. Issue Severity conveys how relevant the issue is. It\u0026rsquo;s the importance ranking. Issues of any type can be minute stuff or game changers. Issue Priority deals with urgency. Regardless of type or severity, how fast should the team be on top of an issue? Teams often mistake Severity with Priority but they are different. Something massive (high severity) could enjoy a fairly low priority and something trivial could need immediate attention.  Please note that you can tweak which are the default selected values for all three attributes under SETTINGS \u0026gt; PROJECT \u0026gt; DEFAULT VALUES.\nFilters Taiga Issues module doesn\u0026rsquo;t sport burndown charts or metrics. Teams that need specific reporting capabilities can use the wonderful live CSV export under SETTINGS \u0026gt; PROJECT \u0026gt; REPORTS or the world-class Taiga API and integrate them into their favourite reporting tool (many use simple spreadsheets and their built-in charts for that).\nWhat Taiga Issues focus on is being able to quickly extract the relevant list of issues for every team member. That\u0026rsquo;s why we have filters box visible by default with all its include/exclude glory. It\u0026rsquo;s here, compared to KANBAN and Scrum, where it\u0026rsquo;s more typical to save custom filters for personal later use. When combined with column ordering you get an extremely fast way to find what you need.\n Hundreds of issues become just a handful. Click to enlarge.\n  \nIn the above example, we go from more than 300 issues to less than 10. We use multiple filters with include/exclude options as well as status column ordering and hide tags. We could even add the search text to further filter but in this case it\u0026rsquo;s probably not necessary since we see everything we need at a glance. If we happened to like to keep this filter, we would simply add it to our list of personal custom filters.\nTaiga Issues Module tips and tricks Every team and every individual decided how to make the most out a flexible tool like Taiga and its multipurpose applicability. Having said that, there a few things we suggest you try out for a better experience and productivity.\n Custom filters: we already covered filters and we touched upon custom filters. Experiment a bit and create two or three handy custom filters. Taiga has a superfast filtering mechanism so why not have multiple one-click-away hyperfocused lists. Cycle over any list: Start with any list, whether there are filters applied or not, then click on any of the issues to go to detail view. Above the \u0026ldquo;Created by\u0026rdquo; text and left to the issue\u0026rsquo;s status, you\u0026rsquo;ll see one or two lateral chevrons. They represent previous and next items throughout the original list you came from. This is present all about Taiga but here is particularly useful for review sessions of multiple issues.   Wonderful previous and next shortcuts with the original list as a protected context\n   Due Date: When you need a fixed due date on top of an issue\u0026rsquo;s priority you can make use of Due Date. Issues have their dedicated custom Due Date entries under SETTINGS \u0026gt; ATTRIBUTES \u0026gt; DUE DATES. We are planning to add Due Dates as a filtering option but, for now, picking quite distinct due date configuration colours allows for immediate attention-seeking issue spotting. Don\u0026rsquo;t be afraid of tags: A bit of discipline while creating tags (and their matching colours) is an amazing investment for a tidy future. Tags can contain emojis and stand out more easily. Try not to add many tags to any single issue, three or four should be enough, so that you don\u0026rsquo;t add cognitive load to what should always be a straightforward list to take action on.  Issues relationship with KANBAN or Scrum modules Issues Module is definitely a team player and works like a charm as a companion to KANBAN or Scrum (or both!) modules.\nFirst, you can put aside whatever doesn\u0026rsquo;t feel right as a user story or a KANBAN card or needs to go through a very different workflow. Issues can help the backlog or the KANBAN board to remain less cluttered for the good reasons. This is one the main reasons Issues Module is so often used by the Taiga community.\nSecond, any issue can be promoted to a user story (or a KANBAN card). You can find that button on the issue\u0026rsquo;s right pane, next to some other available actions such as block or delete. This allows for more fine-tuned workflows, where some petitions can start as a humble issue and fight to become a proper user story or KANBAN card. Or perhaps they were wrongly assumed to be an issue (of any type) and you don\u0026rsquo;t want to create a new user story or KANBAN card and copy the contents, just promote it. Promoting an issue carries over as much information as it is possible so even if it happens well into the issue\u0026rsquo;s lifecycle, you are encouraged to do so with minimal content loss.\nFinally, Sprints can list a selection of attached issues if the team wants to have them handy during the sprint\u0026rsquo;s lifecycle. Not only the team can bring forward existing issues to also show them on the sprint taskboard\u0026rsquo;s view but they can create them here and still find them under Issues. Some teams do this to laser focus what a sprint is about regardless of the dozens of pending issues waiting to be taken care of. It\u0026rsquo;s a filter of sorts, if you think about it.\n A sprint can, at the discretion of the team, host a selection of issues\n  Further reading Taiga Issues Module has enough intrinsic value to be used alone as the key Module for a particular Taiga project but its true potential arises when used it as a great Scrum or KANBAN companion. There are other Taiga Modules we would briefly cover so you know what you might be missing out. We suggest you read The Epic, The Wiki and the Meetup.\n","permalink":"https://resources.taiga.io/features/introissues/","tags":null,"title":"Your crash course into Issues Module"},{"categories":null,"contents":"Check the detailed article with all the options to use markdown in the Taiga editor.\n","permalink":"https://resources.taiga.io/faqs/markdown/","tags":null,"title":"Taiga Markdown"},{"categories":["customisation"],"contents":"The iocaine powder is a reference to the movie The princess Bride. It features a colorless, odorless, and deadly poison from Australia. Character Westley spent two years building up an immunity to iocaine powder. He uses it to trick Vizzini in their battle of wits.\nThe iocaine feature means that a user is out of their comfort zone. It could signal that a team member is learning a new ability required to close a task. It can also mean that this user is over-reaching or over-stretched.\nIocaine is not a bad thing.\nWe all recognize that reaching beyond our boundaries is a good and healthy thing albeit stressful and uncertain. The best way of taking risks is to be sure your team members are aware that you are doing so. They may be more inclined to forgive faults, be supportive, lend a hand, or be kind!\nWe use it internally, and we have learned to respect when people indicate they are taking an Iocaine dose!\nWhen a user takes iocaine it will be shown in the tasks card as a small poison bottle, and your user picture will be tinted to a purple color.\nWhen you see this in a taskboard task you will notice that a colleague (or yourself!) are out of their comfort zone and closing the task could use some help or a little bit more time.\nThe team member who is taking care of the poisoned item should be the one deciding if it\u0026rsquo;s iocained or not. For a team member a task could be trivial (without iocaine) and really difficult for another (a lot of iocaine).\n","permalink":"https://resources.taiga.io/faqs/iocaine/","tags":null,"title":"What is this Iocaine thing in Taiga and how should I use it?"},{"categories":["customisation"],"contents":"Tough question. There is no consensus about time tracking in agile methodologies. Some people think agile methodologies are not meant to include time tracking, while some really need time tracking for a variety of different reasons. Either way, Taiga is built to accommodate multiple use cases.\nBut, of course, agile methodologies are meant to be malleable, so even if we decided to not implement time tracking as a feature in Taiga, teams are implementing it by using workarounds (like adding hours in the task or user story title, etc.)\nTo accomodate these practices we came out with something that could fit in any team workflow and solve many different problems: custom fields.\nSolution 1: Set Up Custom fields You can create custom fields in issues, tasks and user stories to track everything and make beautiful reports with your favourite spreadsheet and the CSV reports functionality.\nSolution 2: Using Toggl Toggl is a time tracking app operated by Toggl OÜ that is integrated with Taiga.io. You only need to sign in in Toggl.com and install the Chrome extension to use it over Taiga.io.\nThanks to Olegerm who developed this integration between Toggl and Taiga.io\n","permalink":"https://resources.taiga.io/faqs/notimetracking/","tags":null,"title":"Why is there no Time Tracking?"},{"categories":["modules"],"contents":"Those \u0026ldquo;little\u0026rdquo; extras that can make a huge different to you project. Part of the beauty of using Taiga is that you can hypersimple and then build your way up by using more features or more modules. This entry on Taiga Resources will cover three less critical modules that could make your team\u0026rsquo;s life so much easier\u0026hellip;\nTaiga Meetup module Let\u0026rsquo;s start with least impressive of all three but still a convenient add-on for quick project-based video rooms. Under SETTINGS \u0026gt; PROJECT \u0026gt; MODULES, you get the Meetup module. Once you activate it, you\u0026rsquo;re allowed to pick either one of the available free videocall services with a unique URL o add your own shortcut. This will add the Meetup icon to the project\u0026rsquo;s sidebar.\n Meetup module is activated\n  Everyone will be one click away of the \u0026ldquo;official\u0026rdquo; online videochat room for the project. It\u0026rsquo;s as simple as that. Don\u0026rsquo;t underestimate this little module, it reduces the typical cognitive load of keeping track of meetup urls yourself.\nTaiga WIKI module Now, this is much serious stuff. Activating the WIKI module under SETTINGS \u0026gt; PROJECT \u0026gt; MODULES (you expected this by now) brings a small content management system to your project. Here you can directly add wiki pages using the Bookmarks option or use internal link references.\nThis is important so we will explain a bit how it works. The WIKI module allows you to instantly create WIKI pages with images, tables and all the microformatting you\u0026rsquo;re used to by now. You just need to add any term to your project\u0026rsquo;s wiki url and you will get this:\n URL says thisisatest and Taiga suggests a new WIKI page\n  Now, keeping track of all these WIKI pages could be tough so usually what team members do is to create those pages through internal links within other WIKI pages. If you are using the HTML mode, simply add a compact title (no spaces) to the link reference. If you prefer to use markdown mode, it\u0026rsquo;s just the standard text for a page title snippet.\nTaiga will know if the destination page exists already or not. If it doesn\u0026rsquo;t, you\u0026rsquo;ll be prompted with the above message. Edit that page (just click on it), save it and you\u0026rsquo;re done, that WIKI page is now \u0026ldquo;solid\u0026rdquo;.\nIf during your creative process, you feel like you would like to have some WIKI pages readily available as bookmarks, you can simply create a new bookmark and start typing already. Or, if the WIKI page already exists and you want it to be somehow promoted to the Bookmarks sidebar, still create the bookmark and enter the WIKI page slug you chose (what appears at the end of the URL), Taiga will understand.\n A sample WIKI page by a The Princess Bride fan. Images, text, tables, code, attachments and a bit of activity\n  WIKI pages can be very useful to write documentation, technical or otherwise. We suggest you break down your content to be very modular and have many WIKI pages linked together instead of a few textwalls. Images and other files can be attached to any WIKI Page through drag \u0026amp; drop but also as simple attachments to have handy below the page content itself.\nWhat is hidden by default is the WIKI page\u0026rsquo;s changelog. Taiga keeps a fairly comprehensive audit trail of every change for every Taiga item. WIKI pages are no exception and you can inspect all the activity by clicking on the Activity banner at the bottom.\nThat\u0026rsquo;s really all that there is for the WIKI Module. The same Markdown syntax rules or the fantastic Taiga HTML editor make up for the rest of the story, to be honest.\nDon\u0026rsquo;t be afraid to deactivate the WIKI Module at any time, it\u0026rsquo;s a non-destructive action. Taiga simply hides all that content from the team but does not delete anything.\nTaiga Epics Module, a powerful tool in the right hands Many teams have the need for broader context around user stories. This can be a release, a milestone, a subproject or any abstraction that covers and tracks progress of user stories. This bird\u0026rsquo;s eye view can be very useful to monitor these collections of user stories and we made sure that you are not constrained to pick them from one project, any Epic can keep track or user stories from any of the projects you have adequate permissions for.\nThis way, a project could even have just the Epics Module activated, no KANBAN, no Scrum, no issues, just Epics, and have a summary view of multiple projects across the organisation thanks to the multi-project user story support for Epics. For instance, you could have a Quarter objective in terms of certain brand designs being finished where that brand design work is spread out several more \u0026ldquo;operational\u0026rdquo; projects.\nHaving said that, the most typical use of Epics is simply to contain high level project achievements, impossible to be operated on but relevant strategy-wise.\n A very straightforwad major goal oriented Epic list. Partial progress is shown for both Epics and related user stories\n  We borrowed the term Epic from Epic User Story in Scrum, where teams define broader value oriented goals that will later be split into proper user stories, much more manageable and that can be assigned, tracked and added to a Sprint. Thanks to the KANBAN support in Taiga, you are free to combine Epics with KANBAN cards as well. And in case you were wondering, yes, one user story can be related to many different Epics. If it makes sense to you, that\u0026rsquo;s fine by us.\nYou activate Epics Module the same way as the rest of modules, simply go to SETTINGS \u0026gt; PROJECT \u0026gt; MODULES and turn on the Epics toggle.\nPro-tip: It pays off to pick a nice and iconic project icon (see SETTINGS \u0026gt; PROJECT) and a distinct colour for each Epic. Taiga\u0026rsquo;s listings and detail views make use of this allowing far more intuitive assessmenet at a glance.\nFinally, don\u0026rsquo;t forget to pick your choice of options to be visible under the view options drop down.\n","permalink":"https://resources.taiga.io/features/epicswikimeetup/","tags":null,"title":"The Epics/Wiki/Meetup, icing on the cake"},{"categories":["Tool migration/import"],"contents":"You can migrate from Jira to Taiga as your primary project management platform following these instructions carefully.\nDisclaimer: Some Taiga product screenshots might refer to older Taiga or Jira releases. When in doubt, please follow the written instructions.\nSuggested step before importing your project. Read this first! Summary: if you want to import team members too, make sure those team members are Taiga users already. A nice workaround is creating a dummy project and inviting them to it. taiga will take care of sending invites and you\u0026rsquo;ll be able to track how many users are now part of Taiga before actually importing the project itself.\nWhen you import your project, you often want to also import your users and keep all the relations between the work items and the team members. Taiga\u0026rsquo;s import project will first look for its team members, add them to the project and then proceed with the content itself.\nIf those users don\u0026rsquo;t exist on that particular Taiga instance (tree.taiga.io or your self-managed Taiga instance), the import process will still go ahead but the link between content and users will be lost and it won\u0026rsquo;t be recovered even if you add those users afterwards.\nIf you need to keep the relationships between content and team members (for example, such team member was assigned to that task or such comment was made by that team member), you need to make sure those team members already exist on that Taiga platform. You can achieve this by asking them to sign up themselves (using the same email address that identifies them on the source platform) or creating a dummy project and invite them to it.\nOn the top of your Taiga screen you have the \u0026ldquo;Projects\u0026rdquo; button. After you have created/selected a project, to invite a new team member go to SETTINGS\u0026gt;MEMBERS (on the sidebar). On the top there is the NEW MEMBER button. You can do this in batches of five team members each. You probably can ignore the different ROLES option here since this project is temporary.\nTaiga will send invites to all users that are not yet part of the platform and you will be able to track how many invites have been accepted. You can resend invites as much as you want.\nWhenever you are happy with the number of people that were part of Taiga, either by signing up or accepting your invitation, you can proceed with a project import. This way, you will be able to seamlessly start working on Taiga. After this, you can safely remove the dummy project since it probably doesn\u0026rsquo;t provide any value any more.\nFor more project customisation options, be sure to check The Project Customisation Guide\nImportant notice about Jira releases and Taiga compatibility  Taiga support Jira releases up to 8.3.5. It has been tested and should work out of the box. Taiga might support Jira releases from 8.3.5 to 8.5.x. Most probably it works. Taiga does not support Jira releases from 8.6.  If you encounter any issues with the Jira to Taiga importer please write to support@taiga.io. We are always happy to find challenging Jira projects to polish our importer. It is important that you always use the latest Taiga release to perform Jira projects imports so we can more easily reproduce the issue you might be facing.\nWhat I need to import from Jira?  You need to configure in your Jira the access from Taiga that allows you to give access with the rights of your users. To do this, you have to go to the applications settings in your Jira server.   New project creation\n  Then, select \u0026ldquo;Application links\u0026rdquo; configuration.   New project creation\n  And create a new application link that points to \u0026ldquo;https://tree.taiga.io\u0026rdquo; (or your taiga instance url).   New project creation\n  You may be asked to confirm the url in some cases, you simply have to confirm the url.   New project creation\n  Then, you have to create the new application link called \u0026ldquo;Taiga\u0026rdquo; as a \u0026ldquo;Generic Application\u0026rdquo; type, and check the \u0026ldquo;Create incomming link\u0026rdquo;.   New project creation\n   In the incomming link configuration, you have to set the consumer key to \u0026ldquo;taiga\u0026rdquo;, the consumer name to \u0026ldquo;Taiga\u0026rdquo;, and in the public key you have to copy and paste the text below:\n-----BEGIN PUBLIC KEY----- MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6HMNth/OevwEmvUJb2wP TftjP2PBwiVqNGvrWnjypZHT6KixDd9av1NlG3ldQJDn7ZdZ0tJmZ/bfeUlV8LX2 QuL5StU6LAP1T3665HZTlzvfsfiC+52eIUi+eXWStZmQ7jhok4e6kIHgddKHSVgQ rZ/xL5eBOprmCoQ2YoScpSt7p2dPuB3TRht2paF0ppd+w8zKkghojPK0H9yZfEIT V/+H/bOllcf/1Qs42cUn4Im3bASoXy17fCtwF4IYGx2OAAy58T4GHnKuuqRukGdP HYs8qDBl4Nq6bJaUOy7zwRFxpR4WQqsAL0v/RR5Eu6N8std2NPeK4dgj/SYoVXVC zwIDAQAB -----END PUBLIC KEY-----    New project creation\n  Finally, you get the confirmation of your \u0026ldquo;Application link\u0026rdquo; creation. Now you can import projects from this Jira instance.   New project creation\n  How do I import a project from Jira?  To start the importation project, you have to got to your project menu, and click on \u0026ldquo;New Project\u0026rdquo; button.   New project creation\n  After that, you can select how to create the project, in this case we want to \u0026ldquo;Import project\u0026rdquo;.   Start import process\n  You can select which importer do you want to use, in this case, you have to select the \u0026ldquo;Jira\u0026rdquo; importer and fill the URL field with your Jira URL and click access.   Select importer\n  As soon as you click access, you will be redirected to the Jira authorization page, to allow Taiga to access to your projects (during the next day). You have to click \u0026ldquo;Allow\u0026rdquo;, to continue the process.   Authorize access to Jira\n  Then you have to select which jira project want to import.   Select Jira project\n  Once you have selected the project you have to define how you want to import the project. This include:   The title of the project. The description of the project. If the project is public or private Which kind of project do you want to create (If you are not importing Jira Agile Board, in this case, is automatically detected). If you want to keep a link from your taiga User Stories to the original jira issues.   Fill new project information\n  Before finish the import process you have to match your Jira users with your Taiga users, this allow us to keep assignation, creation and comments author information correctly.   Select users\n  Finally, you only have to click \u0026ldquo;Import\u0026rdquo; button to start the import process, this can take a while, so be patient.   Confirm users selection\n  After the import process, you can access to your new created project that will looks like this.   Imported project\n  Wich data is imported, and how?  Jira Project or Jira Board as Taiga Scrum/Kanban/Issues Project. Statuses. Issues as User Story/Epics/Issues. Subtasks as User Story tasks or Epic User Stories. Jira Agile sprints as Taiga Sprints Jira members as Project members. Labels as tags. Due Date field as Taiga custom field \u0026ldquo;Due date\u0026rdquo;. Priority field as Taiga custom field \u0026ldquo;Priority\u0026rdquo;. Resolution field as Taiga custom field \u0026ldquo;Resolution\u0026rdquo;. Resolution date field as Taiga custom field \u0026ldquo;Resolution date\u0026rdquo;. Environment as Taiga custom field \u0026ldquo;Environment\u0026rdquo;. Component field as Taiga custom field \u0026ldquo;Components\u0026rdquo;. Affected versions field as Taiga custom field \u0026ldquo;Affected version/s\u0026rdquo;. Fix versions field as Taiga custom field \u0026ldquo;Fix version/s\u0026rdquo;. Links as Taiga custom field \u0026ldquo;Links\u0026rdquo;. Custom fields. Comments. Attachments. Changes in title, description, attachments, labels, sprints, story points, custom fields and state. Issue assignations as User Story/Task/Issue assignation for the first, and User Story/Task/Issue watchers for the rest.  ","permalink":"https://resources.taiga.io/extend/importer-jira/","tags":null,"title":"Jira Importer"},{"categories":["Tool migration/import"],"contents":"You can migrate from Trello to Taiga as your primary project management platform following these instructions carefully.\nDisclaimer: Some Taiga product screenshots might refer to older Taiga or Trello releases. When in doubt, please follow the written instructions.\nSuggested step before importing your project. Read this first! Summary: if you want to import team members too, make sure those team members are Taiga users already. A nice workaround is creating a dummy project and inviting them to it. taiga will take care of sending invites and you\u0026rsquo;ll be able to track how many users are now part of Taiga before actually importing the project itself.\nWhen you import your project, you often want to also import your users and keep all the relations between the work items and the team members. Taiga\u0026rsquo;s import project will first look for its team members, add them to the project and then proceed with the content itself.\nIf those users don\u0026rsquo;t exist on that particular Taiga instance (tree.taiga.io or your self-managed Taiga instance), the import process will still go ahead but the link between content and users will be lost and it won\u0026rsquo;t be recovered even if you add those users afterwards.\nIf you need to keep the relationships between content and team members (for example, such team member was assigned to that task or such comment was made by that team member), you need to make sure those team members already exist on that Taiga platform. You can achieve this by asking them to sign up themselves (using the same email address that identifies them on the source platform) or creating a dummy project and invite them to it.\nOn the top of your Taiga screen you have the \u0026ldquo;Projects\u0026rdquo; button. After you have created/selected a project, to invite a new team member go to SETTINGS\u0026gt;MEMBERS (on the sidebar). On the top there is the NEW MEMBER button. You can do this in batches of five team members each. You probably can ignore the different ROLES option here since this project is temporary.\nTaiga will send invites to all users that are not yet part of the platform and you will be able to track how many invites have been accepted. You can resend invites as much as you want.\nWhenever you are happy with the number of people that were part of Taiga, either by signing up or accepting your invitation, you can proceed with a project import. This way, you will be able to seamlessly start working on Taiga. After this, you can safely remove the dummy project since it probably doesn\u0026rsquo;t provide any value any more.\nFor more project customisation options, be sure to check The Project Customisation Guide\nHow I import a project from Trello?  To start the importation project, you have to got to your project menu, and click on \u0026ldquo;New Project\u0026rdquo; button.   New project creation\n  After that, you can select how to create the project, in this case we want to \u0026ldquo;Import project\u0026rdquo;.   Start import process\n  You can select which importer do you want to use, in this case, you have to select the \u0026ldquo;Trello\u0026rdquo; importer.   Select importer\n  As soon as you select the trello importer, you will be redirected to the Trello authorization page, to allow Taiga to access to your boards (during the next day). You have to click \u0026ldquo;Allow\u0026rdquo;, to continue the process.   Authorize access to Trello\n  Then you have to select which trello board want to import.   Select Trello board\n  Once you have selected the board you have to define how you want to import the project. This include:   The title of the project. The description of the project. If the project is public or private If you want to import archived data from Trello. If you want to keep a link from your taiga User Stories to the original trello cards.   Fill new project information\n  Before finish the import process you have to match your Trello users with your Taiga users, this allow us to keep assignation, creation and comments author information correctly.   Select users\n  Finally, you only have to click \u0026ldquo;Import\u0026rdquo; button to start the import process, this can take a while, so be patient.   Confirm users selection\n  After the import process, you can access to your new created project that will looks like this.   Importer project\n  Wich data is imported, and how?  Trello Board as Taiga Kanban Project. Board avatar as Project avatar. Board columns as Taiga Kanban columns (User story statuses). Cards as User Story (Optionally archived cards). Cards Checklists tasks as User story tasks. Board members as Project members. Tags and tags colors. Due Date field as Taiga custom field \u0026ldquo;Due date\u0026rdquo;. Comments. Attachments. Changes in title, description, due date and state. Card assignations as User Story assignation for the first, and User Story watchers for the rest.  ","permalink":"https://resources.taiga.io/extend/importer-trello/","tags":null,"title":"Trello Importer"},{"categories":null,"contents":"There are important considerations governing the Affero GPL license in use by Taiga. Please be sure you are familiar with your rights and obligations before starting to work on the Taiga code.\nSince the open source license covering Taiga is AGPL, you can freely clone/fork the repo and make any modifications you want. Just remember the basic condition that the Affero GPL brings to the table: any Taiga instance must easily provide to all users a link to the source code that is running that particular Taiga service.\nIf you don\u0026rsquo;t make any changes to the code, the link is pretty simple, it\u0026rsquo;s just a link to Taiga\u0026rsquo;s github page. But if you intend to make adaptations or changes, you must provide a (de-facto) zero-cost way to obtain the complete modified source code. The easiest way would be to fork the repo on github and point your users to that forked repo (you can place that link in the documentation somewhere).\nOur repo is quickly evolving so we suggest you keep careful track of our changes, that way you can easily benefit from our own improvements \u0026ldquo;for free\u0026rdquo;. Some users have decided to use our Taiga cloud instance together with our public API and only develop a separate integration layer that effectively lives outside the Taiga source code. By doing this you can \u0026ldquo;forget\u0026rdquo; about changes taking place at the Taiga source code.\nYour needs will dictate which option suits you better.\nPlease read the AGPL 3.0 license covering Taiga.\nIf you would like to discuss specific dual-licensing with us, contact us a support@taiga.io.\n","permalink":"https://resources.taiga.io/faqs/license/","tags":null,"title":"What's Taiga's Open Source License?"},{"categories":["scrum"],"contents":"Scrum agile technique states that if an estimated user story is not finished, it can\u0026rsquo;t be counted towards a sprint\u0026rsquo;s user story points completion.\nThe rationale is simple, Scrum sprints care about finished work that can de properly validated during the Sprint\u0026rsquo;s Demo. Partial or unfinished work, while perfectly acknowledgeable, is not meant to change the progress metrics that are geared towards delivered value, not time spent.\nThis very binary approach frustrates some agile teams that prefer progress charts to represent any partial progress.\nSome Taiga users have asked to be able to assign points to user stories tasks and keep track of them towards progress. This way, as an example, a user story could be 10 points split up in 2 tasks 5 points each. They would argue that a finished 5-point task could make the user story 50% finished towards sprint and burndown metrics even if the user story is not finished.\nProduct-wise, we continue to evaluate the risks of allowing partial or continuous progress metrics. For the moment, we strongly suggest you read Agile Antipattern: \u0026ldquo;All for sprint\u0026rsquo;s speed\u0026rdquo; in our blog. There are ways to address the underlying problem (and need) without the partial-progress approach.\n","permalink":"https://resources.taiga.io/faqs/scrumsprintprogresstasks/","tags":null,"title":"Can I enjoy partial sprint progress even if user stories are not closed but some tasks are?"},{"categories":null,"contents":"There are many different ways to contribute to Taiga\u0026rsquo;s platform, from patches, to documentation and UI enhancements, just find the one that best fits with your skills. Check out our detailed contribution guide.\n","permalink":"https://resources.taiga.io/faqs/contribute-to-taiga/","tags":null,"title":"How Can I Contribute?"},{"categories":["Tool migration/import"],"contents":"You can migrate from Asana to Taiga as your primary project management platform following these instructions carefully.\nDisclaimer: Some Taiga product screenshots might refer to older Taiga or Asana releases. When in doubt, please follow the written instructions.\nHow I import a project from Asana? Suggested step before importing your project. Read this first! Summary: if you want to import team members too, make sure those team members are Taiga users already. A nice workaround is creating a dummy project and inviting them to it. taiga will take care of sending invites and you\u0026rsquo;ll be able to track how many users are now part of Taiga before actually importing the project itself.\nWhen you import your project, you often want to also import your users and keep all the relations between the work items and the team members. Taiga\u0026rsquo;s import project will first look for its team members, add them to the project and then proceed with the content itself.\nIf those users don\u0026rsquo;t exist on that particular Taiga instance (tree.taiga.io or your self-managed Taiga instance), the import process will still go ahead but the link between content and users will be lost and it won\u0026rsquo;t be recovered even if you add those users afterwards.\nIf you need to keep the relationships between content and team members (for example, such team member was assigned to that task or such comment was made by that team member), you need to make sure those team members already exist on that Taiga platform. You can achieve this by asking them to sign up themselves (using the same email address that identifies them on the source platform) or creating a dummy project and invite them to it.\nOn the top of your Taiga screen you have the \u0026ldquo;Projects\u0026rdquo; button. After you have created/selected a project, to invite a new team member go to SETTINGS\u0026gt;MEMBERS (on the sidebar). On the top there is the NEW MEMBER button. You can do this in batches of five team members each. You probably can ignore the different ROLES option here since this project is temporary.\nTaiga will send invites to all users that are not yet part of the platform and you will be able to track how many invites have been accepted. You can resend invites as much as you want.\nWhenever you are happy with the number of people that were part of Taiga, either by signing up or accepting your invitation, you can proceed with a project import. This way, you will be able to seamlessly start working on Taiga. After this, you can safely remove the dummy project since it probably doesn\u0026rsquo;t provide any value any more.\nFor more project customisation options, be sure to check The Project Customisation Guide\nDisclaimer: Some Taiga product screenshots might refer to older Taiga or Asana releases. When in doubt, please follow the written instructions.\n To start the importation project, you have to got to your project menu, and click on \u0026ldquo;New Project\u0026rdquo; button.   New project creation\n  After that, you can select how to create the project, in this case we want to \u0026ldquo;Import project\u0026rdquo;.   Start import process\n  You can select which importer do you want to use, in this case, you have to select the \u0026ldquo;Asana\u0026rdquo; importer.   Select importer\n  As soon as you select the asana importer, you will be redirected to the Asana authorization page, to allow Taiga to access to your boards (during the next day). You have to click \u0026ldquo;Allow\u0026rdquo;, to continue the process.   Authorize access to asana\n  Then you have to select which asana board want to import.   Select Asana board\n  Once you have selected the board you have to define how you want to import the project. This include:   The title of the project. The description of the project. If the project is public or private If you want to import archived data from Asana. If you want to keep a link from your taiga User Stories to the original asana cards.   Fill new project information\n  Before finish the import process you have to match your Asana users with your Taiga users, this allow us to keep assignation, creation and comments author information correctly.   Select users\n  Finally, you only have to click \u0026ldquo;Import\u0026rdquo; button to start the import process, this can take a while, so be patient.   Confirm users selection\n  After the import process, you can access to your new created project that will looks like this.   Imported project\n  Wich data is imported, and how?  Asana Board as Taiga Kanban Project. Board avatar as Project avatar. Board columns as Taiga Kanban columns (User story statuses). Cards as User Story (Optionally archived cards). Cards Checklists tasks as User story tasks. Board members as Project members. Tags and tags colors. Due Date field as Taiga custom field \u0026ldquo;Due date\u0026rdquo;. Comments. Attachments. Changes in title, description, due date and state. Card assignations as User Story assignation for the first, and User Story watchers for the rest.  ","permalink":"https://resources.taiga.io/extend/importer-asana/","tags":null,"title":"Asana Importer"},{"categories":["customisation"],"contents":"Sure! The Taiga community is awesome and helps us translate the Taiga user interface into more than 20 languages.\nTo see if your language is supported, simply go to EDIT PROFILE and pick your choice under Language drop down.\nIf the language is meant for Right-To-Left setup, it will also activate this mode.\nOur text editor has support for Right-to-Left setup too, so you can combine both options as you please.\nTo know more about Taiga\u0026rsquo;s localisation efforts and language support, please visit our Weblate page.\n","permalink":"https://resources.taiga.io/faqs/changelanguage/","tags":null,"title":"Can I use Taiga in my language?"},{"categories":null,"contents":"This a fair question every agile team should ask themselves. It\u0026rsquo;s not like there are no options out there, if anything, there are too many project management tools available.\nAnd we think that\u0026rsquo;s exhausting, to be honest. Which one of the myriad options out there would make a good match for your organization?\nWhen the team behind Taiga created it in 2015, we knew we needed something different, something really good. Do you know that saying that goes like \u0026ldquo;play chess against a better player so you\u0026rsquo;re sure to learn\u0026rdquo;? We wanted Taiga to be our friendly agile opponent, gladly making sure we would always be ready for the next challenge in a virtuous learning cycle.\nTaiga is not meant for everyone or, rather, Taiga is not meant to please everyone. So what is that makes Taiga\u0026rsquo;s core proposition?\n  First and foremost, Taiga is Open Source. If you value the flexibility this provides, the assurance that you\u0026rsquo;re not putting your projects' data into a black box or the capacity you gain to adapt it to your needs, then Taiga is a winner. Very few solid enterprise-ready project management platforms are open source. Taiga is arguably #1 here.\nTaiga is all about team collaboration where everyone\u0026rsquo;s voice counts. Whether you\u0026rsquo;re a hardcore techie, a designer, a lawyer, a comms specialist or just planning your wedding, Taiga makes sure that, as a platform, it stays out of the way, and lets you decide what to use now and what to leave for your future selves. Start simple and see where the project needs lead you and your team.\nTaiga tries hard to ensure that whether implicitely or explicitely, the agile and lean principles govern your daily work. When we\u0026rsquo;re about to develop any new Taiga feature we always ask ourselves \u0026ldquo;what could go wrong with this?\u0026rdquo;. If we find it too easy for users to embrace the dark side of a feature, then we go back to the drawing board. Sometimes, the absence of a particular feature brings the most compelling benefit.\nAfter all, Taiga is agile project management made easy, intuitive and effective.\nWe could go on and on about some Taiga exclusive perks, like it being translated into 20+ languages, enjoying a vibrant worldwide community, an amazing API or the fact that it allows for Scrum, KANBAN or a simple ticketing system. But what makes Taiga so special is the team behind it, a diverse and joyful bunch of people, determined to make sure that wherever you are, whatever you\u0026rsquo;re doing, our mission is to make sure you get to enjoy any project\u0026rsquo;s journey. Enjoy your visit to the Taiga!\n Taiga\u0026rsquo;s core team\n  What if I stop loving you? Can I take my data and go? Sure you can! You have the option of export your project, package it, and take it elsewhere, or import it to any other Taiga instance, managed by you or by another service provider.\nYou can download Taiga or register online for our Free Trial.\n","permalink":"https://resources.taiga.io/why-taiga/","tags":null,"title":"Why Taiga?"},{"categories":["customisation"],"contents":"No two teams, projects or organisations are alike. Learn how we elegantly crushed the one-size-fits-all curse. Both lack of flexibility and extreme configurability plague the project management arena. Taiga\u0026rsquo;s approach is simple: keep consistency throughout projects, regardless of their simple or advanced status, and outsource some ad-hoc decision to the team\u0026rsquo;s real-world interactions.\nThis content is specially useful for any Taiga user that has at least admin rights on any project, since most of what we will cover do require ADMIN status. You can give ADMIN status to anyone in your project under PROJECT \u0026gt; MEMBERS regardless of their project role.\nTier 1: Modules selection and Default values This might seem obvious but it\u0026rsquo;s worth mentioning. One of the most profound ways to customise a project is to select which modules are available. Depending on this, a team might lean towards one way or another regarding project management.\nThe Modules that are available are Epics, Scrum, KANBAN, Issues, Wiki and Meetup. Scrum and Meetup require some minimum configuration but the rest are fine just being activated.\n Module activation panel under PROJECT \u0026gt; SETTINGS \u0026gt; MODULES\n  It\u0026rsquo;s also recommended that you take a look at the Default Values for the different Taiga items that are available through Module activation. You can have multiple options for some of the most frequently used drop down lists but\u0026hellip; would you like to have one particular default choice pre-selected rather than the standard \u0026ldquo;first item\u0026rdquo;? If so, just fine-tune this under SETTINGS \u0026gt; PROJECT \u0026gt; DEFAULT VALUES.\n Preselected values for main project entities\n  If you activated Scrum, we also recommend that you review the pseudo-fibonacci points scale under SETTINGS \u0026gt; ATTRIBUTES \u0026gt; POINTS and edit your preferred labels linked to the actual numbers. Feel free to adapt it to your team\u0026rsquo;s liking.\n A nice verbose alternative to the default points scale\n  It\u0026rsquo;s not uncommon to come back to this customisation months later as the project advances and requires different features. Of course, this also applies to the rest of the customisation tiers below.\nTier 2: Workflows editing Taiga offers Epics, User Stories, Tasks and Issues to enjoy their own particular set of statuses. We tried our best to use convenient default values but there\u0026rsquo;s absolutely no need to stick to them. Actually, we would like to encourage a team discussion on statuses and workflows as this is part of a healthy and self-conscious project management.\nAll the magic happend under SETTINGS \u0026gt; ATTRIBUTES \u0026gt; STATUSES where you can edit those statuses, alter their natural order and pick useful colours.\n All four entities and theior statuses. Keep in mind that User Story statuses apply for both Scrum and KANBAN\n  A key configuration choice for all four entities is the \u0026ldquo;closed\u0026rdquo; status. If you decide that a particular state means that item is \u0026ldquo;closed\u0026rdquo; (regardless of the status label you choose), Taiga will use that information for metrics and some features might behave differently. For instance, if a User Story is considered closed if it reaches the \u0026ldquo;Rejected\u0026rdquo; status, Taiga will count any estimated user story points for that user story as \u0026ldquo;done\u0026rdquo; as well as making the user story less visible on sprints and lists.\nLikewise, user stories statuses that have the Archived flag ticked, will mean that those statuses are collapsed by default on the KANBAN board. It\u0026rsquo;s a very handy way to keep a massive list of user stories out of sight.\n This is how an archived Upcoming User Story state looks like by default on KANBAN\n  Tier 3: Permission \u0026amp; Roles configuration At Taiga we like to say that this is the perfect agile platform for cross-domain teams. It\u0026rsquo;s important to highlight the different team members' backgrounds and make it count somehow.\nTaiga addresses this in various ways. Different roles may enjoy different permissions, but they are also eligible for the user story points estimation break down. On top of that, you can use roles to filter against or multiple-assign as if they were macros.\nTaiga does come with a heavily inspired digital product roles proposal, but you can get rid of it in no time. Just go, as an Admin project member, to SETTINGS \u0026gt; PERMISSIONS and delete or create any role. When deleting a role you\u0026rsquo;ll be given a choice to reassign content owned by that role. You must have at least one role apart from the External User special role.\n The Weird Old Couple role has all permissions for Epics but would not be able to add, delete or modify existing Sprints, just view them. Also, they don\u0026rsquo;t have a say on user points estimation.\n  External User, what is this? You might have noticed there is no way to delete the special External User role. This role represents both an anonymous user and a Taiga user not belonging to this project. There is a subtle difference between the two, mostly consisting on the Taiga user benefitting from the add/delete/modify permissions as well as view permission while the anonymous user (including search engines) only has view permission applied to them.\nThis is useful when you don\u0026rsquo;t want to add someone to the team and still be able to point them to a project\u0026rsquo;s resource. In large organisations, where you only care about your project team members, the rest of Taiga users, as long as they are logged in, can interact with the project based on what the External User role allows.\nFor Public Projects (see SETTINGS), the External User role has to have at least View permissions for all project entities and they are listed under the Discover page. Private projects are not listed publicly but they still use the External User role. We see many Private Projects enabling some permissions for the External User role to sort out their stakeholders' interaction. If there is any relevant risk in potential information leaks, we strongly suggest you keep the Project Private and a no-permissions External User role.\n The Discover page for the tree.taiga.io site\n  Tier 4: Custom fields and Due Dates It\u0026rsquo;s virtually impossible to satisfy everyone\u0026rsquo;s need for a particular set of fields or attributes. Whether it is a User Story or an Issue, an Epic or a Task, the built-in \u0026ldquo;forms\u0026rdquo; might lack something you want to express as a dedicated piece of data. This is why we developed Custom Fields.\nCustom Fields allow teams to evolve Epics, User Stories, Tasks or Issues into their desired characterisation. Custom Fields come in a variety of types.\n Here we\u0026rsquo;re editing one drop down list custom field wth three options, while showing all other available formats below\n  You can choose between a simple text, a multi-line text, rich text, a date, a URL, a dropdown list of choices, a simple checkbox or a number. Depending on your need, you will probably pick a matching custom field type (you can change this later).\nLet\u0026rsquo;s see an example with Epics.\n A sample of custom fields for The Princess Bride Epics. Note the Dropdown list of choices.\n  This is how it would like on an Epic itself after some quick editing.\n An Epic enjoying a handful of Epic-only custom fields. The block is not collapsed by default.\n  Custom fields can be great, not only to ask for specific information for which teams don\u0026rsquo;t want to use tags or the description field, but also for integrations. Both the API and the Live CSV exports list them and you could use their content to trigger automated actions or make use of them for specific reports.\nWhich is a nice segway to the last major customisation tier\u0026hellip;\nTier 5: 3rd party integrations When we developed Taiga we always had teams in mind. You can of course use Taiga on your own but it really shines when you have more people around you. That also applies to how Taiga thinks of itself regarding other tools and platforms, to be a great team player.\nThere are multiple options that come out of the box, like Github, Gitlab, Bitbuckets and Gogs. Also, Slack is trivial to link with Taiga. And for the rest, we have webhooks.\nYou can find the configuration options for all of them under SETTINGS \u0026gt; INTEGRATIONS and SETTINGS \u0026gt; PLUGINS as well as help to make it work.\n A sample gitlab config, we redacted the tokens and keys.\n  These integrations are meant to make Taiga aware of other tools actions as well as make Taiga able to send notifications to those tools so you can react and streamline certain pipelines or processess (manual or automated).\nIf you are interested in knowing more about how to extend Taiga, please check the wonderful Extend Taiga Section on this here at Taiga Resources. You will get pointers to the API, CSV exports, Webhooks, and how to import/export Taiga projects.\n","permalink":"https://resources.taiga.io/features/customisation/","tags":null,"title":"Customisation"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/categories/kanban/","tags":null,"title":"kanban"},{"categories":["kanban"],"contents":"This is content that goes a bit beyond Taiga as an Agile platform and tries to convey a self-conscious approach to Kanban. We hope it leads you to a better Taiga experience. For a straightforward approach to KANBAN using Taiga please read The 5-min Kanban module overview first.\nWhy would we want to do Kanban? What is Kanban’s promise? Kanban\u0026rsquo;s promise is simple \u0026ldquo;if you can achieve individual empowerment (lean) and clear policies, I can deliver organic succession of finished work while avoiding bottle-necks\u0026rdquo;.\nKanban\u0026rsquo;s promise is deceptively simple and it’s considered to be one of the most challenging Agile methods. The reason is that for a team to fulfill Kanban’s promise, the team has to be much more mature than what is required for Scrum. Actually, it is often seen that some Scrum liturgies are borrowed by Kanban teams as a way to establish a safety net.\nWhat is Kanban and what purpose it serves At first glance, Kanban is a set of columns or states and cards that go from left (initial states) to right (final states). When we picture it, we can instinctively see ourselves creating a Kanban for a personal project, like a book we are writing. We are the sole master of the whole Kanban, we don’t need to ask anyone whether we add a new chapter or a new commissioned illustration. We know when things can move to the next step, we know when things have to be cancelled or restarted and we know when things are done.\n The simplest Kanban is not the most common either\u0026hellip;\n  Kanban tries to solve this at scale, when instead of one person, you have a team of, say, 8 people, and you are all writing the same book. With one key difference, most often you’re writing another person’s book.\nKanban critical challenges The main challenges Kanban implementations face are no real individual autonomy and no clear policies.\nIndividual empowerment in a team is almost always required to have functional Kanban method.\nBy individual empowerment we don’t mean that every individual is the master, can make any decision and knows it all. Taking from the lean approach, we mean that every individual is trusted with the most autonomy that is possible within a specific workflow. In Kanban, autonomy comes with responsibility but also with freedom. This makes sense, without some degree of freedom, the concept of responsibility is devoid of any purpose.\nThis freedom is individually exercised and collectively enjoyed.\nWhat is the waste issue and how Kanban deals with it? In Agile (and so it applies to Kanban) waste is undesired sub-product of a development process that reduces future delivered value, increments technical debt and introduces friction in team dynamics. It leads to frustration, disorientation and lack of predictability.\nExamples of waste: meetings with almost no value for at least one participant. Many and undistinguishable communication channels. Context switching. Rushed work item closure. Misalignment around key decisions. Fine-grain work item effort estimation. Lack of peer review or leaving all quality controls to a team member. Long term planning.\nKanban is also faced with the waste issue. The way Kanban tackles with it is to have a clear set of policies that can be enforced by any individual at any time without giving it much thought. Kanban streamlines the decision making process and functions as a set of triggers and reactions.\nA policy is a rule or a set of rules that determines what to do with a Kanban work item depending on a particular state or event. We say it is a clear policy not simply when it is deterministic (this is very difficult to achieve) but when any individual would implement it the same way in the future.\nYou have autonomous individuals when they are free to interpret the best way to apply a policy.\nIsn’t this a contradiction? No, a clear policy embodies a path to deal with the present certainty, while autonomous individuals embody the future uncertainty. Team members in Kanban are like judges. They know the law, they apply it to new cases to their best of their knowledge.\nGood clear policies evolve based on team members feedback.\nFurther reading We would encourage you to read the Taiga Blog\u0026rsquo;s article \u0026ldquo;Why is Kanban not working for me?\u0026quot; where you will see particular antipatterns that lead to a disastrous experience with Kanban. Your ability to avoid them will surely contribute to not only feel but know you and your team are in control.\n","permalink":"https://resources.taiga.io/features/kanbandarkside/","tags":null,"title":"Kanban, the dark side"},{"categories":["scrum"],"contents":"This is content that goes a bit beyond Taiga as an Agile platform and tries to convey a self-conscious approach to Scrum. We hope it leads you to a better Taiga experience. For a straightforward approach to Scrum using Taiga please read Scrum quick intro first.\nWhy would we want to do Scrum? What is Scrum’s promise? It’s always important to remind ourselves the reasons we chose certain behavioural patterns. We\u0026rsquo;re supposed to be testing an hypothesis. Without self-consciousness we\u0026rsquo;re just following some recipes and tools and hoping to improve magically.\nScrum\u0026rsquo;s promise is simple \u0026ldquo;if you can achieve team commitment, I can deliver minimum waste and high predictability\u0026rdquo;. Now, what is team commitment? First, what\u0026rsquo;s not. Team commitment is not \u0026ldquo;best effort\u0026rdquo; approach or wishful thinking. Also, team commitment is not a collection of individual commitments. For the Taiga founders, team commitment is the ability to fulfill a promise under tolerable uncertainty conditions and minimum external context switching while doing it as a unity.\nWhat is Scrum and what purpose it serves Scrum provides a number of artifacts to achieve this. Those artifacts can be relatively abstract (retrospective) or more tangible (user story) and can be adapted to the project and team\u0026rsquo;s needs.\nMost people misunderstand Scrum with those artifacts and they believe that by following those recipes, they are doing Scrum and being Agile. The vast majority of the Scrum users fall into this sad category, where Scrum is equivalent to short iteration cycles plus dailies, demos and retros.\n The simplest Scrum action, to move a user story up in the backlog\u0026rsquo;s priority\n  It\u0026rsquo;s true, though, that through form you may achieve soul but there\u0026rsquo;s no reason why you couldn\u0026rsquo;t start with soul and then achieve appropriate form. In fact, many teams start just with Scrum artifacts and through practice they begin to work towards a higher level of \u0026ldquo;enlightenment\u0026rdquo;. They do so as long as they realise they are still far from Scrum’s promise. \u0026ldquo;If you can achieve team commitment, I can deliver minimum waste and high predictability\u0026rdquo;.\n\u0026ldquo;If you can achieve team commitment [\u0026hellip;]\u0026rdquo; Earlier we said Team commitment is the ability to fulfill a promise under tolerable uncertainty conditions and minimum external context switching while doing it as a unity. Let\u0026rsquo;s break that down.\n Promise: the selected user stories from a prioritized backlog that go into a sprint. tolerable uncertainty conditions: user stories are well defined and estimated within reasonable error margins. minimum external context switching: the sprint content is respected by all stakeholders. while doing it as a unity: the team finds solutions for the team, no one is left behind. Either the team \u0026ldquo;wins or loses\u0026rdquo; as a whole. Shared responsibility is not diluted responsibility.   Team members should be entitled to close their own tasks\n  \u0026ldquo;[\u0026hellip;] I can deliver minimum waste [\u0026hellip;]\u0026rdquo;  deliver: working software, closed user stories, tangible value. minimum: structurally low quantity. By design. Acceptable. Sustainable. waste: the main enemy to defeat with Scrum (and Agile). Waste is not exactly the opposite of efficiency. Waste is a much more complex concept. Waste can be operational tactical and strategic. Efficiency tends to be mostly operational. A set of efficient behaviours can still lead to waste.  There are tolerable levels of waste, but what is not tolerable is not monitoring it.\nWaste in Scrum (and Agile) It represents the undesired sub-product of a development process that reduces future delivered value, increments technical debt and introduces friction in team dynamics. It leads to frustration, disorientation and lack of predictability.\nIt’s tricky to identify what behaviours or actions lead to waste because, sometimes, a meeting can apparently be a waste generator but turn out to be a waste destructor.\nExample: \u0026ldquo;Aki: I don’t want to go to yet another meeting about frontend for this feature, it’s a waste of my time\u0026rdquo; but later\u0026hellip; \u0026ldquo;Ryu: it was great that Aki was in the meeting, it helped us change our approach, it saved us lots of time!\u0026rdquo;\n\u0026ldquo;[\u0026hellip;] and high predictability [\u0026hellip;]\u0026rdquo;  high: extraordinary. Not seen elsewhere. Desirable. Statistically meaningful. predictability: chance of enjoying a satisfactory sprint. Deriving team\u0026rsquo;s average velocity after a number of sprints. Being able to roughly predict when a user story in the backlog, based on its priority (position), will be finished.  Predictability is such a desirable state\u0026hellip; it gives sense of control since we can answer all typical and uncomfortable questions like \u0026ldquo;when will this be\u0026hellip;\u0026rdquo;, \u0026ldquo;how we will be able to\u0026hellip;\u0026rdquo; \u0026ldquo;who should do this\u0026hellip;\u0026quot;.\nEvery single software development methodology swears it will deliver predictability. Old methodologies did this by fixing the future. \u0026ldquo;This is the future, by decree\u0026rdquo;, they would say. Agile doesn\u0026rsquo;t dear to do this, instead it says \u0026ldquo;I promise that, at any point, you will have the biggest value and the smallest waste but I am humble enough not to say WHAT exactly your project will contain as finished user stories\u0026rdquo;.\nThe more waste, the less predictability. The more waste, the more \u0026ldquo;We can\u0026rsquo;t know\u0026rdquo;.\nActually, Scrum might actually be able to predict WHAT exactly your project will contain as finished user stories, but for that you need to have gone through some sprints already and learned about your metrics. Which leads us to the last section of this article.\nPredictable rhythm based on team commitment Rhythm speaks of an activity that enjoys and can sustain a particular velocity or rate. Rhythm speaks of order and not of chaos. Rhythm speaks also of necessary unison and collective coalescence. There is hardly any rhythm if every member of a team acts on their own and for their own sake.\n Even a sprint burndown can tell us how likely are we to close all user stories by the end of it\n  When we say predictable rhythm we mean we can identify the core elements of that rhythm and project them into the future. And we can do this because it is sustainable. A rhythm cannot derive from rush work, or if it can, like a super high rhythm, it won’t be sustainable and could lead to sudden bursts of waste.\nWe can achieve predictable rhythm when there is a sense of purpose because purpose allows teams to anticipate challenges and be ready to sort them out with little effort.\nWhile purpose is always a key ingredient of team commitment, we need to start with team commitment first.\nWe already talked about team commitment in terms of its essence but Scrum has a clear process to achieve it.\n\u0026ldquo;The backlog is the Product Owner\u0026rsquo;s property, the sprint is the team’s property\u0026rdquo;. This means that while the Product Owner is expected to have a good quality backlog, the sprint content is a decision made by the team. When a team says \u0026ldquo;this can go into the sprint\u0026rdquo; it must mean \u0026ldquo;there is a very high chance that we will have this done at Product Owner\u0026rsquo;s satisfaction by the time of the sprint\u0026rsquo;s demo\u0026rdquo;.\nA team can commit to what they have *freely and responsibly aligned themselves to. If they have no say in what goes into a sprint, team commitment doesn\u0026rsquo;t exist and we will simply speak of \u0026ldquo;best-effort\u0026rdquo;.\nAlthough this is very tempting for Product Owners as \u0026ldquo;best-effort\u0026rdquo; could work and requires fewer meetings and explanations, in the absence of team commitment, there is a high risk for a team of alienation and distancing from their results.\nFurther reading We would encourage you to read the Taiga Blog\u0026rsquo;s article \u0026ldquo;Four Agile Antipatterns and a big fat lie\u0026rdquo; where you will see particular antipatterns that lead to a disastrous experience with Scrum. Your ability to avoid them will surely contribute to not only feel but know you and your team are in control.\n","permalink":"https://resources.taiga.io/features/scrumdarkside/","tags":null,"title":"Scrum, the dark side"},{"categories":["kanban"],"contents":"Welcome to a lean method to manage and improve work across human systems, welcome to Kanban. This approach aims to manage work by balancing demands with available capacity, and by improving the handling of system-level bottlenecks.\nYou can also say that Kanban is an organic flow of tasks that minimize \u0026ldquo;in progress\u0026rdquo; time thanks to a clear set of rules and a trustworthy team.\nRegardless of how you put it, the reality is that Kanban is a very common way of adopting agile principles because it\u0026rsquo;s relatively easy to grasp and adapt to your unique context.\nTaiga Kanban module Every Taiga project can activate the Kanban module. This also happens automatically if you chose the Kanban template upon project creation.\n The Kanban module showing an empty initial state\n  When you do this the project\u0026rsquo;s toolbar will show the Kanban icon and you will be able to access the Kanban board. By default the Kanban columns or statuses are ones that generally fit the software development process but feel free to change them yourself. You can create your own set of Kanban columns by going to SETTINGS \u0026gt; ATTRIBUTES \u0026gt; STATUSES and change USER STORY STATUSES.\n Project attributes setup\n  Scroll down to the USER STORY STATUSES and change the default settings to accommodate your particular use case. If you want your Kanban work items to be considered as done when they reach a particular Kanban status, flag that status as Closed. Also, if you believe a particular Kanban status might end up containing dozens or hundreds of closed Kanban work items, you might want to add an additional status for those and flag it as both Closed and Archived. The Archived property makes a particular Status hide its content by default so you don\u0026rsquo;t have to load no longer relevant content.\n Project settings related to Kanban statuses: Closed \u0026amp; Archived\n  Finally, it\u0026rsquo;s a good practice to define the Work in progress Limit or WIP Limit for some (if not all) Kanban statuses. This means you are allowing Taiga to monitor whether you are exceeding a particular Kanban status capacity. For instance, Taiga will still allow you to add a fourth work item to 3-WIP Limit Kanban status but you\u0026rsquo;ll get a visual warning on the Kanban board. A Kanban heavily rely on optimal WIP Limits and sticking to them so you don\u0026rsquo;t end up with various work items graveyards that cause bottlenecks. It\u0026rsquo;s challenging to get WIP Limits right straight away so you can always change them later.\n Project settings related to WIP Limits\n  You can adjust Kanban WIP Limits under SETTINGS \u0026gt; ATTRIBUTES \u0026gt; KANBAN OPTIONS.\nThis is the basic setup. You can now go to the Kanban module and start creating work items and moving them around as they progress in their lifecycle.\nKanban swimlanes Some teams require advanced features for their Kanban boards. One of the most sought after is the Kanban swimlane. It consists on an independant section that can contain a separate set of work items. Taiga allows you to create as many Kanban swimlanes as you need, effectively distributing your work across different major categorizations. Some example of swimlanes usage are sub-teams, project modules, different priorities, etc.\nYou can manage Kanban swimlanes under SETTINGS \u0026gt; ATTRIBUTES \u0026gt; KANBAN OPTIONS.\n Kanban swimlanes configuration\n  By default, a Taiga project comes with no Kanban swimlanes. Once you start creating swimlanes, the top one on the list will act as the default Swimlane for some Taiga project operations. You will also have the option to adjust separate WIP Limits for each one of the swimlanes.\n Kanban swimlanes view with some sample tasks\n  Of course, you can move Kanban work items from one swimlane to another and from one status to any other status.\nKanban filters and search options A Kanban board might get a bit cluttered at times and therefore filters come in handy.\n Kanban with filters applied\n  Simply click on Filters and fiddle with include/exclude criteria with live reaction from the Kanban board. You can remove them at any time or create a custom filter for future use, one click away.\nYou can also combine it with the search box that will try to be as smart as possible and show matching Kanban work items only.\nKanban zoom levels Kanban is very often described as great visual management tool. It radiates information to all team members and, most importantly, everyone shares the same vision.\nHowever, Taiga users are allowed to pick their preferred zoom level for the Kanban board. You can pick from four options: compact, default, detailed and expanded.\nA picture is worth a thousand words, just see how different the same Kanban board can look depending on your zoom level preference.\n Kanban with compact zoom vs expanded zoom\n  When you prefer more detailed or expanded zoom levels you are asking Taiga to bring more and more information on the work item to the front, saving you that extra click to view its detail. Compact or default zoom levels make the Kanban board more of a heat map of sorts and can accommodate more work items in one screen.\nOf course, you can change your zoom level preferences at any time. And don\u0026rsquo;t worry, this is your personal Kanban view, it does not affect other team members personal preferences.\nYou will probably find yourself sticking to a preferred zoom level most of the time while also collapsing swimlanes you don\u0026rsquo;t need to see, or Kanban statuses that you don\u0026rsquo;t manage.\nKanban relationship with Scrum module Taiga is about choice and flexibility while still adhering to basic agile and lean principles. We want you to start using either Scrum or Kanban for your project (or neither and stick with Issues) and later change your mind.\nIn order for Taiga to manage this transition, we decided that a Kanban work item or Kanban card would also be internally considered a Scrum User Story. That way, you can keep all your work regardless of which Agile module you are using.\nActually, you could have both modules, Kanban and Scrum activated and see the same item placed on the Scrum Backlog or a Scrum Sprint and, at the same time, see it on the Kanban board, in a particular swimlane. As the Taiga Team likes to say \u0026ldquo;if you know what you\u0026rsquo;re doing, we\u0026rsquo;re fine\u0026rdquo;.\nBe sure to read KANBAN, the Dark Side to know more about potential pitfalls while using KANBAN.\n","permalink":"https://resources.taiga.io/features/5minkanban/","tags":null,"title":"The 5-min Kanban module overview"},{"categories":null,"contents":"Taiga will always try to make things easy and intuitive for new users but it\u0026rsquo;s good to have a nice \u0026amp; quick overview for your first couple of days.\nThere are two main use cases we need to cover. Project Admin and Project Team Member. The main difference between both is that a Project Admin can change a project\u0026rsquo;s settings. Obviously, one can be a Project Admin on one or two projects and a Team Member on five others, but we will treat both onboarding needs separately.\nImportant: If you\u0026rsquo;re new to Taiga and would like to invite your team to the platform, you need to do so after you have created a project. Once you have created a project, you can go to SETTINGS\u0026gt;MEMBERS and add them. Invites will be sent by Taiga to all of them to join both Taiga and your project. If you invite team members that are already Taiga users, they will be immediately added to the project and they will get notified as well.\nAs a Project Team Member Whether you got an invitation link or you signed in and were added to a project, the basic question here is, what\u0026rsquo;s Taiga all about and how can I get my work done?\nThere are four major Taiga sections you should be aware of. We\u0026rsquo;ll go from most used to least used, although all are useful in their own ways.\nProject view You can access your assigned projects by clicking on Projects link at the top left of your Taiga screen. You can hover and get an interactive shortlist or click on the link and go to a dedicated page where you can access them as well as rearrange them. Once you have clicked on a project, you access your default view for that project, which is always the Project\u0026rsquo;s Timeline if you haven\u0026rsquo;t changed that (we\u0026rsquo;ll discuss this later under Account Settings).\n A simple project timeline with all modules activated\n  From here you can browse the project\u0026rsquo;s main modules by taking a look at the sidebar. This sidebar won\u0026rsquo;t ever get cluttered and it\u0026rsquo;s split into two sections. The top section lists the active main modules (Epics, Scrum, KANBAN and Issues) while the bottom section show the active secondary modules like Wiki and Meetup as well as the Team section and the General Search feature. You can expand the sidebar if you prefer more explicit navigation information.\nHow can I add or edit work items? Chances are that you will either want to create or update a user story, a task or an issue. If you\u0026rsquo;re using the Scrum module, you simply click on Backlog and create a user story. Afterwards, you can rearrange its priority by simply drag and dropping it.\n\nIf you\u0026rsquo;re using KANBAN, it doesn\u0026rsquo;t get much more difficult. Go to KANBAN and click on the + button on the column you want the card to be initially placed at (normally, that\u0026rsquo;s the initial column).\n\nDrag \u0026amp; Drop works as expected throughout Scrum and KANBAN. In Scrum\u0026rsquo;s Backlog view you will use it mainly to rearrange the backlog\u0026rsquo;s priorities and also to select one or multiple user stories from the backlog to fit into a open sprint located under the Sprint pane.\n Here we use the add to current sprint shoretcut instead of drag \u0026amp; drop. The Sprint burndown was also updated.\n We created a single task with the creation dialog but the bulk add option is also handy sometimes.\nIn KANBAN, drag and drop has the meaning of changing a KANBAN card status and it\u0026rsquo;s the primary workflow action you can make on a card to advance it to the next stage.\n Note how the KANBAN columns' WIP limits are updated after each card movement.\nYou can always click on a user story and see its detail view, check its tasks, change title, assigned team members, add comments or simply edit its description.\n A user story detail view represents the general approach to detail/edit view for Taiga main entities.\nIf you are interested in knowing more about how KANBAN or Scrum modules work, be sure to check The 5-min Kanban module overview and the Quick intro to Scrum\nFurther reading for Issues, Wiki, Epics and Meetup They all follow the same basic principles. You will quickly find that whether you want to edit a textbox, attach a file or an image, make someone a watcher for an item or simply add comments and quote people, Taiga remains consistent across the board.\nYou should be ready to visit the guide to Issues as well as the compact walkthrough for Wiki, Epics and Meetup modules.\nDashboard view Upon login or if you just go to your Taiga instance, you\u0026rsquo;re confronted with your Taiga dashboard with quick access to your working on items, a list of watched items and shortcuts to your projects. You can always go back to your dashboard by clicking on the Taiga icon on the top bar.\n You can hide some items that are not that relevant\n  Account settings view What\u0026rsquo;s a tool without account settings where you can personalise your platform experience? Taiga has very straightforward section for that, just hover your avatar and select Account settings. Besides the usual personal information and password change you get to choose your preference for some automated actions and notifications schemes.\n here you see how we went to change our default start page for a project to be the KANBAN view.\nProfile view Taiga has an additional section to get a multiproject view where you can find and list everything that is accessible to you. Simply click on your avatar and you access your personal profile section where you can check from what your personal bio looks like for people that might have access to it to all sorts of information on your activities and relevant content.\n One of the many lists and filters under your profile, watched tasks in this case\n  Further reading The Frequently Asked Questions is a nice place to go from here but if you\u0026rsquo;re in the mood of better understanding the dark side of Scrum and KANBAN and how to avoid their potential pitfalls, indulge yourself in the eye-opener 10-min reading that Scrum: The Dark Side and KANBAN: The Dark Side are.\nAs a Project Admin Everything we just covered for Team Member applies to you (make sure you go through it) and yet there\u0026rsquo;s the whole project settings world to explore.\nBesides editing the Project Details where you can change the project\u0026rsquo;s logo, description info and the Public or Private status, there is much more waiting for you when you navigate through the two-tier project settings menu.\n A window to Project Settings\n  Typical first-day project settings changes include role \u0026amp; permissions to accomodate your team\u0026rsquo;s diverse nature, module activation and workflows adjustments.\nThe Customisation page here at taiga Resources offers a very hands-on guide to project configuration.\nAs a Project Owner (creator) you don\u0026rsquo;t need to do all the customisation heavylifting, you can give Admin status to any team member under SETTINGS \u0026gt; MEMBERS so that they can too help you with the project fine-tuning.\n","permalink":"https://resources.taiga.io/getting-started/","tags":null,"title":"Getting Started"},{"categories":["customisation"],"contents":"Taiga includes optional custom fields in its administration panel. It will provide teams with a flexible input to fit in their workflow.\nUsers with administration permissions will be able to create new custom fields for their project Epics, User Stories, Subtasks and Issues.\n Example of the different custom fields options\n  Simply go to your Project Admin section \u0026gt; Attributes \u0026gt; Custom fields and add, remove or edit any of those for your choice of Taiga entities.\nYou will then be able to see the new custom field option within the Epic, User story, Subtask or Issue view, depending on your choice.\n Example of one URL-type custom field being used in a user story\n  Please note than custom fields cannot be used to filter Taiga items. We plan to add this capability in the future. However, both the API and the live CSV exports do contain the custom fields information.\n","permalink":"https://resources.taiga.io/faqs/settings-customfields/","tags":null,"title":"Can I add new custom fields to my project?"},{"categories":null,"contents":"Absolutely! Taiga supports several 3rd party tool migration processes. Jira, Trello, Asana and Github as well as other Taiga instances are supported. Be sure to check the documentation.\n","permalink":"https://resources.taiga.io/faqs/tool-migration/","tags":null,"title":"Can I migrate my content on platform X to Taiga?"},{"categories":null,"contents":"Transferring the project ownership of a blocked project might be an unexpected burden to the transferee so we would like to avoid that at all costs. The simplest and fastest solution is to simply subscribe to the minimum paid plan on a monthly basis and then do the project ownership transfer normally (the other person would still have to accept clicking on an link sent to them via email).\nOn exceptional occasions we have an alternative plan that will take much longer, which is that both you and the transferee send an email to support@taiga.io explicitly requesting the project ownership transfer for one or more projects where both of you are already members. That will trigger a manual action on our side but you might have to wait a several days.\n","permalink":"https://resources.taiga.io/faqs/transfer-blockedproject/","tags":null,"title":"Can I transfer the ownership of my blocked tree.taiga.io project?"},{"categories":null,"contents":"Frequently Asked Questions\n","permalink":"https://resources.taiga.io/faqs/","tags":null,"title":"Frequently Asked Questions"},{"categories":null,"contents":"Yes, you can cancel at any time. Taiga.io plans are paid monthly or yearly, so if you cancel, once you do so, the plan will run to the end of the period and not renew.\n","permalink":"https://resources.taiga.io/faqs/cancel-subscription/","tags":null,"title":"Is it possible to cancel my subscription on taiga.io whenever I want?"},{"categories":["reporting"],"contents":"Taiga has both built-in reporting capabilities and the possibility of exporting real-time live CSV links to other reporting tools such as spreadsheets. Furthermore, Taiga\u0026rsquo;s API is available for more advanced and custom reporting integrations.\n","permalink":"https://resources.taiga.io/faqs/howtoreporting/","tags":null,"title":"What is Taiga's reporting capabilities?"},{"categories":null,"contents":"Taiga is an Open Source platform. At the same time, we provide a freemium cloud/SaaS offer so you can use our own infrastructure to host all your projects and teams. Depending on your use, we may charge for this service.\nBut who has to actually pay?\nA project owner that needs to go beyond the FREE PLAN needs to pay a monthly or yearly amount based on Taiga\u0026rsquo;s Pricing Policy. This project owner is responsible for the payment of all their projects' team members. Project owners only pay once per team member, regardless of how many projects those team members belong to or the overall number of private projects a project owner administers.\nAs a project owner, you can always check which Taiga users are counting towards your paid subscription under user settings subscription settings.\nRegular team members, even if they enjoy the ADMIN role in a number of projects, do not pay. They are taken care of by their Taiga project owner.\nOf course, a Taiga user could be a regular user under a paying Taiga project owner and, with that same Taiga account, be project owner to others. In that case, this Taiga user would pay for their respective projects' team members.\n","permalink":"https://resources.taiga.io/faqs/payment-whohastopay/","tags":null,"title":"Who has to pay to use taiga.io?"},{"categories":null,"contents":"We are sorry to hear that. The most probable reason any project would be blocked is because the owner of that project did not subscribe in time to an appropriate paid plan. The project hasn’t been deleted at all, it is simply not accessible for the time being.\nTaiga.io does not immediately block projects upon unsuccessful payment, it will continue to attempt the payment three more times during the subsequent 5 days after the first failed attempt. Taiga will also send an email for every unsuccessful payment attempt but the only recipient of those emails is the project owner.\nIf you are not the project’s owner, we suggest you contact them. Please tell them to follow the instructions on Taiga.io to subscribe to a paid plan. Your project will immediately be available again.\nIf you are the project owner and you receive one of such emails, proceed to change the debit/credit card details as an invalid or expired debit/credit card is number #1 reason for a failed payment. Updating the debit/credit card details with a valid one before the projects get blocked should automatically prevent the blocking process. If the projects are already blocked, entering valid debit/credit card details immediately restores the account status and allow projects to be accessible again. You can simply go to youruser settings subscription settings. If you encounter any problem simply contact support@taiga.io and we will give you instructions to follow so you can subscribe to a paid plan.\n","permalink":"https://resources.taiga.io/faqs/payment-whyprojectblocked/","tags":null,"title":"Why is my project blocked on taiga.io?"},{"categories":["Extend Taiga"],"contents":"There are many different ways to contribute to Taiga\u0026rsquo;s platform, from patches, to documentation and of course, developing new tools Taiga related, just find the one that best fits your skills. Check out our detailed contribution guide.\nThese are the contributions community developed that boost your Taiga\u0026rsquo;s environment with features, authentication or automation.\nAnsible for Taiga Ansible for Taiga\n Author: Justin Scott License: AGPL3 URL: https://github.com/JScott/ansible-taiga Last updated at: 2015-05-07 Compatible with: taiga5 Tags: ansible, integration  Ansible Role for Taiga Ansible Role for Taiga\n Author: Chris Olstrom License: Doesn\u0026rsquo;t have URL: https://github.com/colstrom/ansible-taiga Last updated at: 2015-02-21 Compatible with: taiga5 Tags: ansible, integration  Docker image for Taiga This Docker repository provides custom taiga-front and taiga-back docker images with additional plugins and a production ready docker-compose.\n Author: Mathieu Brunot License: Doesn\u0026rsquo;t have URL: https://github.com/Monogramm/docker-taiga Last updated at: 2020-11-07 Compatible with: taiga5 Tags: docker, integration  python-taiga A Python module for communicating with the Taiga API\n Author: Nephila License: Doesn\u0026rsquo;t have URL: https://github.com/nephila/python-taiga Last updated at: 2020-12-01 Compatible with: taiga5 Tags: API, integration, python  Taiga containers with optional LDAP This container runs Taiga from Github release tags on Fedora 31. The container contains the OpenID plugin out of the box, but it\u0026rsquo;s only enabled if an OpenID configuration exists in the environment. There\u0026rsquo;s also an LDAP synchronization that can be ran in a separate container. This is also an optional feature. The container is used in production by Prehensile Tales running in Podman.\n Author: Hein-Pieter van Braam License: Doesn\u0026rsquo;t have URL: https://github.com/PrehensileTales/taiga-containers Last updated at: 2019-01-21 Compatible with: taiga5 Tags: docker, integration, auth  Taiga contrib Active Directory auth Taiga plugin for Active Directory authentication\n Author: Stefan Midjich License: AGPLv3 URL: https://github.com/stemid/taiga-contrib-ad-auth Last updated at: 2016-11-09 Compatible with: taiga5 Tags: auth, integration  Taiga contrib kerberos auth The Taiga plugin for kerberos authentication\n Author: Diego Giovane Pasqualin License: AGPLv3 URL: https://github.com/dpasqualin/taiga-contrib-kerberos-auth Last updated at: 2016-08-04 Compatible with: taiga5 Tags: auth, integration  Taiga contrib ldap auth Extended Taiga.io plugin for LDAP authentication\n Author: Mathieu Brunot License: AGPLv3 URL: https://github.com/Monogramm/taiga-contrib-ldap-auth-ext Last updated at: 2020-03-11 Compatible with: taiga5 Tags: auth, integration  Taiga contrib OpenID auth An OpenID / Keycloak Authentication Plugin. Heavily based off of taiga-contrib-github-auth\n Author: Robert License: AGPLv3 URL: https://github.com/robrotheram/taiga-contrib-openid-auth Last updated at: 2020-03-26 Compatible with: taiga5 Tags: auth, integration  Taiga contrib SAML auth The Taiga plugin for SAML authentication\n Author: Jonathan Gianuzzi License: AGPLv3 URL: https://github.com/jgiannuzzi/taiga-contrib-saml-auth Last updated at: 2018-02-06 Compatible with: taiga5 Tags: auth, integration  Taiga deployer A deployer tool for Taiga.io project\n Author: Juan Manuel Parrilla License: Doesn\u0026rsquo;t have URL: https://github.com/jparrill/taiga-deployer Last updated at: 2015-11-11 Compatible with: taiga5 Tags: vagrant, ansible, integration  Taiga contrib FAS OpenID auth The Taiga plugin for FAS (Fedora Account System) authentication.\n Author: Ralph Bean License: Doesn\u0026rsquo;t have URL: https://github.com/fedora-infra/taiga-contrib-fas-openid-auth Last updated at: 2016-11-21 Compatible with: taiga5 Tags: auth, integration  taiga-php TaigaPHP is a PHP wrapper used to handle the Taiga.io API easily\n Author: Thibault License: MIT URL: https://github.com/TZK-/TaigaPHP Last updated at: 2019-07-21 Compatible with: taiga5 Tags: API, integration, php  Taiga.pm On Taiga PM you can read about some of the features of Taiga 5\n Author: Taiga.pm License: Doesn\u0026rsquo;t have URL: https://taiga.pm Last updated at: 2018-12-01 Compatible with: taiga5 Tags: tutorial  Taigo Taigo is a Go wrapper used to handle the Taiga.io API easily\n Author: theriverman License: MIT URL: https://github.com/theriverman/taigo Last updated at: 2021-03-18 Compatible with: taiga6 Tags: API, integration, go, golang  ","permalink":"https://resources.taiga.io/extend/contributions/","tags":null,"title":"Contributions"},{"categories":["Tool migration/import"],"contents":"You can migrate/sync from Github to Taiga as your primary project management platform following these instructions carefully.\nDisclaimer: Some Taiga product screenshots might refer to older Taiga or Github releases. When in doubt, please follow the written instructions.\nSuggested step before importing your project. Read this first! Summary: if you want to import team members too, make sure those team members are Taiga users already. A nice workaround is creating a dummy project and inviting them to it. taiga will take care of sending invites and you\u0026rsquo;ll be able to track how many users are now part of Taiga before actually importing the project itself.\nWhen you import your project, you often want to also import your users and keep all the relations between the work items and the team members. Taiga\u0026rsquo;s import project will first look for its team members, add them to the project and then proceed with the content itself.\nIf those users don\u0026rsquo;t exist on that particular Taiga instance (tree.taiga.io or your self-managed Taiga instance), the import process will still go ahead but the link between content and users will be lost and it won\u0026rsquo;t be recovered even if you add those users afterwards.\nIf you need to keep the relationships between content and team members (for example, such team member was assigned to that task or such comment was made by that team member), you need to make sure those team members already exist on that Taiga platform. You can achieve this by asking them to sign up themselves (using the same email address that identifies them on the source platform) or creating a dummy project and invite them to it.\nOn the top of your Taiga screen you have the \u0026ldquo;Projects\u0026rdquo; button. After you have created/selected a project, to invite a new team member go to SETTINGS\u0026gt;MEMBERS (on the sidebar). On the top there is the NEW MEMBER button. You can do this in batches of five team members each. You probably can ignore the different ROLES option here since this project is temporary.\nTaiga will send invites to all users that are not yet part of the platform and you will be able to track how many invites have been accepted. You can resend invites as much as you want.\nWhenever you are happy with the number of people that were part of Taiga, either by signing up or accepting your invitation, you can proceed with a project import. This way, you will be able to seamlessly start working on Taiga. After this, you can safely remove the dummy project since it probably doesn\u0026rsquo;t provide any value any more.\nFor more project customisation options, be sure to check The Project Customisation Guide\nHow I import a project from Github?  To start the importation project, you have to got to your project menu, and click on \u0026ldquo;New Project\u0026rdquo; button.   New project creation\n  After that, you can select how to create the project, in this case we want to \u0026ldquo;Import project\u0026rdquo;.   Start import process\n  You can select which importer do you want to use, in this case, you have to select the \u0026ldquo;GitHub\u0026rdquo; importer.   Select importer\n  As soon as you select the github importer, you will be redirected to the GitHub authorization page, to allow Taiga to access to your repositories (during the next day). You have to click \u0026ldquo;Authorize taigaio\u0026rdquo;, to continue the process.   Authorize access to GitHub\n  Then you have to select which github repository want to import.   Select GitHub repository\n  Once you have selected the repository you have to define how you want to import the project. This include:   The title of the project. The description of the project. How do you want to import the issues in Github. If the project is public or private If you want to keep a link from your taiga User Stories to the original github issues.   Fill new project information\n  Before finish the import process you have to match your GitHub users with your Taiga users, this allow us to keep assignation, creation and comments author information correctly.   Select users\n  Finally, you only have to click \u0026ldquo;Import\u0026rdquo; button to start the import process, this can take a while, so be patient.   Confirm users selection\n  After the import process, you can access to your new created project that will looks like this.   Imported project\n  Wich data is imported, and how?  Github Project as Taiga Project (Kanban, Scrum or Issues project). Organization avatar as project avatar. Github Issues as Taiga User Stories or Issues. Collaborators as project members. Tags and tags colors. Comments. Changes in state, milestone, assignation and tags. Milestones as sprints. Issues assignations as User Story/Issue assignation for the first, and User Story/Issue watchers for the rest.  ","permalink":"https://resources.taiga.io/extend/importer-github/","tags":null,"title":"Github Importer"},{"categories":["extend taiga"],"contents":"Taiga offers lots of features and customisation options that cover many different use cases and users. On top of that, Taiga is easily extensible in many ways, and you can work with Taiga information to add extra functionalities to your projects.\nAPI From the beginning, Taiga has aimed to be beautiful as well as useful for developers, so it has a very curated public API, feature complete and well documented. Thanks to this API, you can connect Taiga with other tools in your organization, create your own interfaces and easily automate processes.\ntaiga-php and taiga-python are both excellent examples of how the API enables new ways of using Taiga, and both are community driven:\n taiga-php is a wrapper made in PHP to handle the Taiga API. python-taiga is a library, written in Python, to interact with the API. Taigo is a library, written in Go, to interact with the API.  You can check all the community contributions which add functionalities over Taiga\u0026rsquo;s.\n The complete API is available at: https://docs.taiga.io/api.html\n CSV reports Each project in Taiga has the option to generate CSVs from the Admin panel. Thanks to these CSVs, it\u0026rsquo;s very straightforward to use the data in spreadsheets to generate custom reports. Taiga offers raw data in CSV so many applications can operate with the data.\nYou can check this detailed tutorial and this video where you can have an idea of what you can achieve thanks to this reports.\nWebhooks Outgoing webhooks send notifications to external services. For example, you can notify the creation of a new sprint, or follow the workflow of issues, tasks and userstories in any of your organization\u0026rsquo;s tools. The external service needs to be ready to process the data in the notification. If you have a customisable reporting system, you could create reports based on the Taiga\u0026rsquo;s notifications.\nCurrently, Taiga notifies the following events:\n a sprint is created, updated or deleted a user story is created, updated or deleted a task is created, updated or deleted an issue is created, updated or deleted a wiki page is created, updated or deleted  Check the documentation to see the detailed payload for each notification.\nIntegrations Taiga is able to connect with other applications to have more functionalities. Some of these integrations come directly with Taiga, others are community driven, and you can develop your own integration to fit in what your organization needs.\nChats In Taiga you can easily configure and customise which events do you want to notify to a Slack channel. Thus, your team will be always up to date to the project status and its advance.\nNo matter if you\u0026rsquo;re using Taiga.io or a self-hosted instance, you can use the Slack integration.\nCheck the detailed documentation about installing and configuring Slack\nRepositories Repository integrations are the perfect way to merge product workflow with development workflow. For instance, you can centralise issues of all your repositories in a Taiga project, so you can coordinate better efforts and priorities.\nCurrently Taiga offers, out of the box, integration with the main control version systems:\n Github Gitlab Bitbucket Gogs  Authorization Taiga comes with a complete user system, but it\u0026rsquo;s possible as well configure other authentication systemc. You can use Taiga in your organization and your users authenticate with a centralised system. This is achieved thanks to plugins, some of them provided by Taiga and others provided by the community.\nTaiga offers plugins to authenticate with widely used systems as Github and Gitlab. In Taiga.io you can use directly both of them. If you\u0026rsquo;d like to use them in your self-hosted instance, check the corresponding documentation to install and configure:\n Github Gitlab  Aside from the Taiga provided plugins, the community have developed and shared other authentication systems, as LDAP o Kerberos. You can check the complete list in our page of community contributions.\nDeployments Being open source, Taiga is easily installed in your own self-hosted instances. Taiga offers to official ways to install Taiga:\n Docker is the recommended way to install Taiga. It\u0026rsquo;s a widely used technology, developer friendly and ready to be deployed in any cloud. It also comes with the main plugins and integrations ready to go. Check the official documentation on how to install Taiga with Docker. You can always install Taiga from source code, installing all the different components. This is way to install Taiga if you have your own plugins or integrations. Check the official documentation on how to install Taiga from source code.  And on top of these, the community has shared other systems to deploy Taiga, based mainly on Ansible or Docker. You can check the complete list in our page of community contributions. You can always develop your own recipes to deploy Taiga.\nImport / Export projects Taiga import/export feature allows you to extract all your data from one Taiga instance and move it to another one. You can start working on a self-hosted instance and decide you\u0026rsquo;d like to migrate to Taiga.io, or viceversa. You can even move project between different Taiga self-hosted instances.\nCheck our tutorials on how to import and export projects\nImporters If you\u0026rsquo;re enjoying Taiga, you can always migrate your projects from other platforms to Taiga and keep working with all its features. Taiga offers importers for some project mangement tools, like Trello or Jira. If you\u0026rsquo;d like to migrate your organization\u0026rsquo;s projects to Taiga, let us know!\nCheck our documentation on how to import projects from other platforms:\n Import from Trello Import from Jira Import from Github Import from Asana  If you\u0026rsquo;re using Taiga self-hosted, check the documentation on how to configure different importers.\n","permalink":"https://resources.taiga.io/extend/how-to-extend-taiga/","tags":null,"title":"How To Extend Taiga"},{"categories":["Tool migration/import"],"contents":"Taiga import/export feature allows you to extract all your data from one Taiga instance and move it to another one.\nImportant. Read this! These instructions only cover Taiga to Taiga project migration. Do not follow these guidelines to import projects from other project management tools.\nThe only other project management tools you can import projects from are Trello, Jira, Asana and Github.\nCheck our separate documentation on how to import projects from these platforms:\n Import from Trello Import from Jira Import from Github Import from Asana  Please DO NOT TRY to import from any other tool not listed above. It will only end up in errors and wasted time.\nIf you are importing from other Taiga instance, please continue reading.\nExporting a project from your existing Taiga instance To export a project and download the \u0026ldquo;dump file\u0026rdquo; you have to:\n  Log into Taiga.\n  Open the Project you wish to export.\n  Click the \u0026ldquo;Settings\u0026rdquo; menu icon.\n settings button\n    In the center menu pane, click the option \u0026ldquo;Project Profile\u0026rdquo; \u0026gt; \u0026ldquo;Export.\u0026rdquo;\n  On the right-side of the screen, click the green \u0026ldquo;Export\u0026rdquo; button.\n Export button\n    If you are using \u0026ldquo;tree.taiga.io\u0026rdquo; or an asynchronously configured Taiga instance the export (dump) file will be generated by the server in asynchronous mode and you will receive an email once the export file has been generated.\n Asynchronous export result\n   Export email\n    If you are exporting from a local instance (or non-Taiga hosted) which is configured to work synchronously (this is a legacy configuration and is currently not recommended), you will see this screen. The JSON file should be downloaded automatically, and if not, you can always click the \u0026ldquo;here\u0026rdquo; in the link below.\n Synchronous export result\n    Your Taiga JSON file looks something like this (if you decide to poke around—please don’t!):  Dump content\n    Importing a project to your new Taiga instance  The project import in Taiga doesn\u0026rsquo;t migrate users, only project data, if you want to keep the users relation with the project correctly, you have to create the users before you import the project. Important, the matching of users with the import data will be done through case-sensitive email addresses.\n If the import fails, please contact with support@taiga.io or ask through the Taiga Google Group: https://groups.google.com/forum/#!forum/taigaio\nOnce you have a dump of your project, you can import it in other taiga instance.\n  In your web browser, sign into the Taiga instance you wish to import the project into.\n  Go to your project menu on the top bar, and click on “New Project” button.  New project button\n    After that, you can select how to create the project, in this case we want to “Import project”.\n Import project button\n    You can select which importer do you want to use, in this case, you have to select the “Taiga” importer and choose the previously exported project file (JSON file).\n Import Taiga project\n    Depending on your instance (tree.taiga.io or an asynchronously configured Taiga instance), you might get a screen that looks like this:\n Importing project\n    Click \u0026ldquo;Accept\u0026rdquo; and wait for the email similar to the example below:\n Import email\n    Most likely, the import process will succeed and you will see the project appear on the main projects screen:\n Imported project\n    Open the project and plan/develop/succeed as you did before!\n  ","permalink":"https://resources.taiga.io/extend/import-export-projects/","tags":null,"title":"Import/Export Taiga Projects"},{"categories":null,"contents":"This is the easiest and recommended way to run Taiga in production. This document explains how to deploy a full Taiga service for a production environment with docker.\nRequirements Prior to start the installation, ensure you have installed:\n docker: version \u0026gt;= 17.09.0+ docker-compose: version \u0026gt;= 1.27.0+  If you don\u0026rsquo;t have docker installed, please follow installation instructions from docker.com: https://docs.docker.com/engine/install/ Additionally, it\u0026rsquo;s necessary to have familiarity with Docker, docker-compose and Docker repositories.\nGetting started Clone this repository.\n Screenshot of Taiga\u0026rsquo;s docker repo\n  \n$ cd taiga-docker/ $ git checkout stable Start the application $ ./launch-all.sh After some instants, when the application is started you can proceed to create the superuser with the following script:\n$ ./taiga-manage.sh createsuperuser The taiga-manage.sh script lets launch manage.py commands on the back instance:\n$ ./taiga-manage.sh [COMMAND] If you\u0026rsquo;re testing it in your own machine, you can access the application in http://localhost:9000. If you\u0026rsquo;re deploying in a server, you\u0026rsquo;ll need to configure hosts and nginx as described later.\nAs EXTRA: the default launch-all.sh script comes with penpot, the open-source solution for design and prototyping. The default same machine access for the penpot application is http://locahost:9001\nIt\u0026rsquo;s developed by the same team behind Taiga. If you want to give it a try, you can go to penpot\u0026rsquo;s github to review its own configuration variables.\nIf you just want to launch Taiga standalone, you can use the launch-taiga.sh script instead of the launch-all.sh.\nConfiguration and Customisation with Environment Variables This configuration is likely to suit what you need. Edit environment variables in docker-compose.yml and docker-compose-inits.yml. Have in mind that some of the variables are in both files, and you need to edit both.\nConfiguration variables are in docker-compose.yml with default values that we strongly recommend that you change. Those variables are needed to run Taiga. Apart from this configuration, you can have some customisation in Taiga, that add features that are disabled by default. Find those variables in Customisation section and add the corresponding environment variables whenever you want to enable them.\nConfiguration Database configuration These vars will be used to create the database for Taiga and connect to it.\nImportant: these vars should have the same values in taiga-back and taiga-db.\nService: taiga-db\nPOSTGRES_DB: taiga POSTGRES_USER: taiga POSTGRES_PASSWORD: taiga Service: taiga-back\nPOSTGRES_DB: taiga POSTGRES_USER: taiga POSTGRES_PASSWORD: taiga Additionally, you can also configure POSTGRES_PORT in taiga-back. Defaults to \u0026lsquo;5432\u0026rsquo;.\nTaiga Settings Service: taiga-back\nTAIGA_SECRET_KEY: taiga-back-secret-key TAIGA_SITES_SCHEME: http TAIGA_SITES_DOMAIN: localhost:9000 Service: taiga-events\nTAIGA_SECRET_KEY: taiga-back-secret-key Service: taiga-protected\nTAIGA_SECRET_KEY: taiga-back-secret-key Service: taiga-front\nTAIGA_URL: \u0026quot;http://localhost:9000\u0026quot; TAIGA_WEBSOCKETS_URL: \u0026quot;ws://localhost:9000\u0026quot; TAIGA_SECRET_KEY is the secret key of Taiga. Should be the same as this var in taiga-back, taiga-events and taiga-protected.\nTAIGA_URL is where this Taiga instance should be served. It should be the same as TAIGA_SITES_SCHEME://TAIGA_SITES_DOMAIN.\nTAIGA_WEBSOCKETS_URL is used to connect to the events. This should have the same value as TAIGA_SITES_DOMAIN, ie: ws://taiga.mycompany.com.\n IMPORTANT NOTICE: When you\u0026rsquo;re configuring Taiga to run with HTTPS, you should configure TAIGA_URL with https and TAIGA_WEBSOCKETS_URL with wss.\n Session Settings Taiga doesn\u0026rsquo;t use session cookies in its API as it stateless. However, the Django Admin (/admin/) uses session cookie for authentication. By default, Taiga is configured to work behind HTTPS. If you\u0026rsquo;re using HTTP (despite de strong recommendations against it), you\u0026rsquo;ll need to configure the following environment variables so you can access the Admin:\nService: taiga-back\nSESSION_COOKIE_SECURE: \u0026quot;False\u0026quot; CSRF_COOKIE_SECURE: \u0026quot;False\u0026quot; More info about those variables can be found here.\nEmail Settings By default, email is configured with the console backend, which means that the emails will be shown in the stdout. If you have an smtp service, uncomment the \u0026ldquo;Email settings\u0026rdquo; section in docker-compose.yml and configure those environment variables:\nService: taiga-back\nEMAIL_BACKEND: \u0026quot;django.core.mail.backends.smtp.EmailBackend\u0026quot; DEFAULT_FROM_EMAIL: \u0026quot;no-reply@example.com\u0026quot; EMAIL_HOST: \u0026quot;smtp.host.example.com\u0026quot; EMAIL_PORT: 587 EMAIL_HOST_USER: \u0026quot;user\u0026quot; EMAIL_HOST_PASSWORD: \u0026quot;password\u0026quot; EMAIL_USE_TLS: \u0026quot;True\u0026quot; EMAIL_USE_SSL: \u0026quot;True\u0026quot; Uncomment EMAIL_BACKEND variable, but do not modify unless you know what you\u0026rsquo;re doing.\nTelemetry Settings Telemetry anonymous data is collected in order to learn about the use of Taiga and improve the platform based on real scenarios.\nService: taiga-back\nENABLE_TELEMETRY: \u0026quot;True\u0026quot; You can opt out by setting this variable to \u0026ldquo;False\u0026rdquo;. By default is \u0026ldquo;True\u0026rdquo;.\nRabbit settings These variables are used to leave messages in the rabbitmq services. These variables should be the same as in taiga-back, taiga-async, taiga-events, taiga-async-rabbitmq and taiga-events-rabbitmq.\nService: taiga-back\nRABBITMQ_USER: taiga RABBITMQ_PASS: taiga Service: taiga-events\nRABBITMQ_USER: taiga RABBITMQ_PASS: taiga Service: taiga-async-rabbitmq\nRABBITMQ_ERLANG_COOKIE: secret-erlang-cookie RABBITMQ_DEFAULT_USER: taiga RABBITMQ_DEFAULT_PASS: taiga RABBITMQ_DEFAULT_VHOST: taiga Service: taiga-events-rabbitmq\nRABBITMQ_ERLANG_COOKIE: secret-erlang-cookie RABBITMQ_DEFAULT_USER: taiga RABBITMQ_DEFAULT_PASS: taiga RABBITMQ_DEFAULT_VHOST: taiga Taiga protected settings Service: taiga-protected\nMAX_AGE: 360 The attachments will be accesible with a token during MAX_AGE (in seconds). After that, the token will expire.\nCustomisation All these features are disabled by default. You should add the corresponding environment variables with a proper value to enable them.\nRegistration Settings Service: taiga-back\nPUBLIC_REGISTER_ENABLED: \u0026quot;True\u0026quot; Service: taiga-front\nPUBLIC_REGISTER_ENABLED: \u0026quot;true\u0026quot; If you want to allow a public register, configure this variable to \u0026ldquo;True\u0026rdquo;. By default is \u0026ldquo;False\u0026rdquo;. Should be the same as this var in taiga-front and taiga-back.\nImportant: Taiga (in its default configuration) disables both Gitlab or Github oauth buttons whenever the public registration option hasn\u0026rsquo;t been activated. To be able to use Github/ Gitlab login/registration, make sure you have public registration activated on your Taiga instance.\nSlack Settings Service: taiga-back\nENABLE_SLACK: \u0026quot;True\u0026quot; Service: taiga-front\nENABLE_SLACK: \u0026quot;true\u0026quot; Enable Slack integration in your Taiga instance. By default is \u0026ldquo;False\u0026rdquo;. Should have the same value as this variable in taiga-front and taiga-back.\nGithub settings Used for login with Github. Get these in your profile https://github.com/settings/apps or in your organization profile https://github.com/organizations/{ORGANIZATION-SLUG}/settings/applications\nNote ENABLE_GITHUB_AUTH and GITHUB_CLIENT_ID should have the same value in taiga-back and taiga-front services.\nService: taiga-back\nENABLE_GITHUB_AUTH: \u0026quot;True\u0026quot; GITHUB_API_CLIENT_ID: \u0026quot;github-api-client-id\u0026quot; GITHUB_API_CLIENT_SECRET: \u0026quot;github-api-client-secret\u0026quot; Service: taiga-front\nENABLE_GITHUB_AUTH: \u0026quot;true\u0026quot; GITHUB_API_CLIENT_ID: \u0026quot;github-api-client-id\u0026quot; Gitlab settings Used for login with GitLab. Get these in your profile https://{YOUR-GITLAB}/profile/applications or in your organization profile https://{YOUR-GITLAB}/admin/applications\nNote ENABLE_GITLAB_AUTH, GITLAB_CLIENT_ID and GITLAB_URL should have the same value in taiga-back and taiga-front services.\nService: taiga-back\nENABLE_GITLAB_AUTH: \u0026quot;True\u0026quot; GITLAB_API_CLIENT_ID: \u0026quot;gitlab-api-client-id\u0026quot; GITLAB_API_CLIENT_SECRET: \u0026quot;gitlab-api-client-secret\u0026quot; GITLAB_URL: \u0026quot;gitlab-url\u0026quot; Service: taiga-front\nENABLE_GITLAB_AUTH: \u0026quot;true\u0026quot; GITLAB_CLIENT_ID: \u0026quot;gitlab-client-id\u0026quot; GITLAB_URL: \u0026quot;gitlab-url\u0026quot; Github Importer Service: taiga-back\nENABLE_GITHUB_IMPORTER: \u0026quot;True\u0026quot; GITHUB_IMPORTER_CLIENT_ID: \u0026quot;client-id-from-github\u0026quot; GITHUB_IMPORTER_CLIENT_SECRET: \u0026quot;client-secret-from-github\u0026quot; Service: taiga-front\nENABLE_GITHUB_IMPORTER: \u0026quot;true\u0026quot; Jira Importer Service: taiga-back\nENABLE_JIRA_IMPORTER: \u0026quot;True\u0026quot; JIRA_IMPORTER_CONSUMER_KEY: \u0026quot;consumer-key-from-jira\u0026quot; JIRA_IMPORTER_CERT: \u0026quot;cert-from-jira\u0026quot; JIRA_IMPORTER_PUB_CERT: \u0026quot;pub-cert-from-jira\u0026quot; Service: taiga-front\nENABLE_JIRA_IMPORTER: \u0026quot;true\u0026quot; Trello Importer Service: taiga-back\nENABLE_TRELLO_IMPORTER: \u0026quot;True\u0026quot; TRELLO_IMPORTER_API_KEY: \u0026quot;api-key-from-trello\u0026quot; TRELLO_IMPORTER_SECRET_KEY: \u0026quot;secret-key-from-trello\u0026quot; Service: taiga-front\nENABLE_TRELLO_IMPORTER: \u0026quot;true\u0026quot;  What you want to see in the console\n  Advanced configuration In an advanced configuration you ignore the environment variables in docker-compose.yml or docker-compose-inits.yml.\nMap a config.py file From taiga-back download the file settings/config.py.prod.example and rename it:\nmv settings/config.py.prod.example settings/config.py Edit it with your own configuration:\n connection to PostgreSQL connection to RabbitMQ for taiga-events and taiga-async credentials for email Enable/disable anonymous telemetry Enable/disable public registration  Check as well the rest of the configuration if you need to enable some advanced features.\nMap the file into /taiga-back/settings/config.py. Have in mind that you have to map it both in docker-compose.yml and docker-compose-inits.yml. You can check the x-volumes section in docker-compose.yml with an example.\nMap a conf.json file From taiga-front download the file dist/config.example.json and rename it:\nmv dist/config.example.json dist/config.json Edit it with your own configuration and map the file into /taiga-front/dist/config.py.\nConfigure the proxy Finally, your host configuration needs to make a proxy to http://localhost:9000. Example:\nserver { server_name taiga.mycompany.com; ... location / { proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Scheme $scheme; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_redirect off; proxy_pass http://localhost:9000/; } # Events location /events { proxy_pass http://localhost:9000/events; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection \u0026quot;upgrade\u0026quot;; proxy_connect_timeout 7d; proxy_send_timeout 7d; proxy_read_timeout 7d; } } ","permalink":"https://resources.taiga.io/30min-setup/","tags":null,"title":"30min Setup"},{"categories":["Extend Taiga"],"contents":"There are many different ways to contribute to Taiga\u0026rsquo;s development, just find the one that best fits with your skills. Examples of contributions we would love to receive include:\n Bug reports Code patches, enhancements Contrib Plugins Documentation improvements Translations UI enhancements  All of these ways may affect the API, the UI, language localization\u0026hellip; or other parts of Taiga. There isn\u0026rsquo;t a single way to contribute, and we\u0026rsquo;ll be happy to help you with your contributions.\nBig features are also welcome but if you want to see your contributions included in Taiga codebase we strongly recommend you start by initiating a chat through our mailing list.\nDeveloper Certificate of Origin + License  Contributing to Taiga by adding code to its repositories (typically a Pull Request) implies acceptance of the DCO and License terms.\n By contributing to Kaleidos Ventures SL., You accept and agree to the following terms and conditions for Your present and future Contributions submitted to Kaleidos Ventures SL. Except for the license granted herein to Kaleidos Ventures SL. and recipients of software distributed by Kaleidos Ventures SL., You reserve all right, title, and interest in and to Your Contributions.\nAll Contributions are subject to the following DCO + License terms.\nBug reports Bugs are about code, but not only about code. You can find a bug in the UX, the design, the translations, the documentation. If you find a bug in Taiga you can always report it:\n  in Taiga issues. This is the preferred way\n  in GitHub we have different projects with issues as well; you can create an issue in the corresponding repository:\n taiga-back: taiga-back github issues taiga-front: taiga-front github issues taiga-front-dist: taiga-front-dist github issues taiga-events: taiga-events github issues taiga-protected: taiga-protected github issues taiga-docker: taiga-docker github issues taiga-doc: taiga-doc github issues taiga-resources: taiga-resources github issues, which is the repository for this web.    send us an email to support@taiga.io if is a bug related to tree.taiga.io\n  send us an email to security@taiga.io if is a security bug.\n  One of our fellow Taiga developers will search, find and hunt it as soon as possible.\nReporting a bug: Please, before reporting a bug, take time to write down as much detail as possible: explain why this is a bug for you and how can we reproduce it. It\u0026rsquo;ll be useful as well to know your Operating System and your browser and version. If it\u0026rsquo;s possible, attach a screenshot to give more context to the bug.\nUsually, it takes less time to fix a bug if the developer knows how to find it. Thanks to that information, we\u0026rsquo;ll be faster fixing any bug.\nLocalization Bugs: Taiga use Weblate to manage the i18n files so don\u0026rsquo;t submit a pull request to those files (except -en.json). To fix a translation, just access our team of translators, set up an account in the Taiga Weblate project and start contributing.\nCode patches, enhacements Taiga will always be glad to receive code patches to update, fix or improve its code.\nIf you know how to improve our code base or you found a bug, a security vulnerability or a performance issue and you think you can solve it, we will be very happy to accept your pull-request. If your code requires considerable changes, we recommend you first talk to us directly. We will find the best way to help. If you would like to implement it by yourself consider if it\u0026rsquo;s a small or a big change.\nBesides, you\u0026rsquo;d probably like to make yourself confortable with the development environment. If you find some problems, please let us know in our mailing list.\nSmall Changes They can be crafted and submited to the Github repositories as a Pull Request.\nMajor Changes Before contributing with a major change to Taiga, it should be discussed first with the Taiga Team so that we can better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project. Please, contact us in the mailing list or via [support@taiga.io](Support email).\nWe have defined a concrete workflow for these changes:\n User Story: Send us a complete description of the functionality you\u0026rsquo;d like to develop, how it should work, for which profiles, as if you were writing a User Story. Please include some ideas of what would be a definition of Done of the User Story. The team will review it, decide whether or not it could make it into Taiga Core. If not, you can always write a plugin. Mentorship: If accepted, Taiga team will help you, and a person from the team will be your contact in the development process. The Story will be visible in the Taiga Kanban. User Experience: The functionality will require some wireframes or ideas to be developed correctly. A good UX its an essential part of Taiga success. You should create a user experience proposal and the Taiga UX team will help you. Design: The design should respect the Taiga style. Try to reproduce other areas of the site. The taiga design team will review this proposal as well. Development: The next step is the development. Remember to add unit, integration and e2d tests as well as the new code. We have the API well documented too in taiga-doc. Pull request: The last step it to create the Pull Reuqest. Remember to add a good description and screenshots are welcome too. Once the pull request is done, someone else from the team will review the code to ensure that it fits with the good practices and styles. If it does, the PR will be merged and will be on the next Taiga release.   Don\u0026rsquo;t forget to add your name to AUTHORS.rst file!\n If you think you are not able to do one or more of the parts of the process, your contribution is still welcome, but we cannot ensure that it will make it soon into the Taiga core anytime soon. It will depend on our priority backlog.\nThanks a lot! It is really great that we could make Taiga better with the help of the community.\nContrib Plugins Taiga supports contrib plugins to add or overwrite some functionalities. You can create your own contribs and share the the community or use any of the contrib plugins.\nDocumentation improvements Currently, we have authored three main documentation hubs:\n API: Our API documentation and reference for developing from Taiga API. Documentation: If you need to install Taiga on your own server, this is the place to find some guides. Taiga Resources: This page is intended to be the support reference page for the users.  If you find some errors, or want to propose changes to improve readability, you can create issues or submit code changes to these repositories:\n Taiga documentation Taiga resources  Translations We are eager to get your help translating Taiga. It\u0026rsquo;s easy (and fun!): just access our team of translators with the link below, set up an account in Weblate and start contributing. Join us to make sure your language is covered! Help Taiga to translate content\nLocalization Bugs: Taiga use Weblate to manage the i18n files so don\u0026rsquo;t submit a pull request to those files (except -en.json). To fix a translation, just access our team of translators, set up an account in the Taiga Weblate project and start contributing.\nUI enhancements Taiga is made for developers and designers. We care enormously about UI because usability and design are both critical aspects of the Taiga experience.\nIf you have some ideas to make Taiga UI better, we will love to receive your feedback. Please send us your enhancement, with the reason and, if possible, an example. Our design and UX team will review your proposal as soon as possible. We recommend you to use our mailing list so we can have a lot of different opinions and debate.\n","permalink":"https://resources.taiga.io/extend/how-can-i-contribute/","tags":null,"title":"How Can I Contribute"},{"categories":null,"contents":"Phrase Emphasis **bold** __bold__ bold bold\n_italic_ *italic* italic italic\n~~strike~~ strike\nLinks Inline\nAn [example](http://url.com/ \u0026quot;Title\u0026quot;) An example\nReference-style labels\nAn [example][id]. Then, anywhere else in the doc, define the link: [id]: http://example.com/ \u0026quot;Title\u0026quot; An example. Then, anywhere else in the doc, define the link:\nURL autolinking\nGo to http://example.com Go to http://example.com\nTaiga user mentions\nUse @\u0026lt;username\u0026gt;, for example\nHello, my name is @imontoya. You killed my father. Hello, my name is @imontoya. You killed my father.\nTaiga USs, Tasks and Issues references\nUse  #\u0026lt;ref\u0026gt;, for example:\nThe user story #9. The task #13. The issue #42. The user story #9. The task #13. The issue #42.\nTaiga Wiki links\nAn [example](wiki-page-name-in-slug-format \u0026quot;Page\u0026quot;) of wiki link. An example of wiki link.\nOther option will be:\nAn [[example-one]] or [[example-two|Example 2]] of wiki links. An example-one or Example 2 of wiki links.\nImages Inline\n![alt text](circle1.svg \u0026quot;Title\u0026quot;)  Reference-style\n![alt text][id] [id]: /static/images/circle1.svg \u0026quot;Title\u0026quot;  Emoticons\nAn example emoticon :smile: An example emoticon See a complete list of emoticons at this Emoji Cheatsheet.\nHeaders Setext-style\n Header 1 ======== Header 2 -------- atx-style (closing #\u0026rsquo;s are optional)\n# Header 1 # ## Header 2 ## ### Header 3 ### #### Header 4 #### ##### Header 5 ##### ###### Header 6 ###### Lists Ordered, without paragraphs\n1. Foo 2. Bar  Foo Bar  Unordered, with paragraphs\n* A list item. With multiple paragraphs (extra line break between the list and paragraph). * Bar   A list item.\nWith multiple paragraphs.\n  Bar\n  You can nest them\n* Abacus * answer * Bubbles 1. bunk 2. bupkis * BELITTLER 3. burper * Cunning  Abacus  answer   Bubbles  bunk bupkis  BELITTLER   burper   Cunning  Tables This is a table:\n Header 1 | Header 2 ---------- | ---------- Cell 1.1 | Cell 1.2 Cell 2.1 | Cell 2.2    Header 1 Header 2     Cell 1.1 Cell 1.2   Cell 2.1 Cell 2.2    Another example with extra pipes on the ends:\n| Header 1 | Header 2 | |---------- | ----------| | Cell 1.1 | Cell 1.2 | | Cell 2.1 | Cell 2.2 |    Header 1 Header 2     Cell 1.1 Cell 1.2   Cell 2.1 Cell 2.2    An example with inline Markdown:\n| Header 1 | Header 2 | |------------ | ----------------- | | *Cell 1.1* | http://cell12.com | | Cell 2.1 | ~~Cell 2.2~~ |    Header 1 Header 2     Cell 1.1 http://cell12.com   Cell 2.1 Cell 2.2    Blockquotes \u0026gt; Email-style angle brackets \u0026gt; are used for blockquotes. \u0026gt; \u0026gt; And, they can be nested.  Email-style angle brackets are used for blockquotes.\n   And, they can be nested.\n  \u0026gt; * You can quote a list. \u0026gt; * Etc.   You can quote a list. Etc.   Code Spans `\u0026lt;code\u0026gt;` spans are delimited by backticks. You can include literal backticks like `` `this` ``. \u0026lt;code\u0026gt; spans are delimited by backticks.\nYou can include literal backticks like `this`.\nPreformatted Code Blocks Auto highlight code block\nusing backticks (```)\n ` ` ` This is a text example ` ` ` This is a text example Specific highlight code block\n ```python def hello(world): pass ``` def hello(world): pass Horizontal Rules Three or more dashes or asterisks:\n------- * * * - - - -    ","permalink":"https://resources.taiga.io/taiga-markdown-syntax/","tags":null,"title":"Taiga Markdown Syntax"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/search/","tags":null,"title":"Search Result"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/tags/","tags":null,"title":"Tags"},{"categories":null,"contents":"","permalink":"https://resources.taiga.io/categories/tool-migration/import/","tags":null,"title":"Tool migration/import"},{"categories":["taiga5"],"contents":"Ansible for Taiga","permalink":"/extend/contributions/#ansible-for-taiga","tags":["ansible","integration"],"title":"Ansible for Taiga"},{"categories":["taiga5"],"contents":"Ansible Role for Taiga","permalink":"/extend/contributions/#ansible-role-for-taiga","tags":["ansible","integration"],"title":"Ansible Role for Taiga"},{"categories":["taiga5"],"contents":"This Docker repository provides custom taiga-front and taiga-back docker images with additional plugins and a production ready docker-compose.","permalink":"/extend/contributions/#docker-image-for-taiga","tags":["docker","integration"],"title":"Docker image for Taiga"},{"categories":["taiga5"],"contents":"A Python module for communicating with the Taiga API","permalink":"/extend/contributions/#python-taiga","tags":["API","integration","python"],"title":"python-taiga"},{"categories":["taiga5"],"contents":"This container runs Taiga from Github release tags on Fedora 31. The container contains the OpenID plugin out of the box, but it's only enabled if an OpenID configuration exists in the environment. There's also an LDAP synchronization that can be ran in a separate container. This is also an optional feature.\nThe container is used in production by Prehensile Tales running in Podman.","permalink":"/extend/contributions/#taiga-containers","tags":["docker","integration","auth"],"title":"Taiga containers with optional LDAP"},{"categories":["taiga5"],"contents":"Taiga plugin for Active Directory authentication","permalink":"/extend/contributions/#taiga-contrib-ad-auth","tags":["auth","integration"],"title":"Taiga contrib Active Directory auth"},{"categories":["taiga5"],"contents":"The Taiga plugin for kerberos authentication","permalink":"/extend/contributions/#taiga-contrib-kerberos-auth","tags":["auth","integration"],"title":"Taiga contrib kerberos auth"},{"categories":["taiga5"],"contents":"Extended Taiga.io plugin for LDAP authentication","permalink":"/extend/contributions/#taiga-contrib-ldap-auth","tags":["auth","integration"],"title":"Taiga contrib ldap auth"},{"categories":["taiga5"],"contents":"An OpenID / Keycloak Authentication Plugin. Heavily based off of taiga-contrib-github-auth","permalink":"/extend/contributions/#taiga-contrib-openid-auth","tags":["auth","integration"],"title":"Taiga contrib OpenID auth"},{"categories":["taiga5"],"contents":"The Taiga plugin for SAML authentication\"","permalink":"/extend/contributions/#taiga-contrib-saml-auth","tags":["auth","integration"],"title":"Taiga contrib SAML auth"},{"categories":["taiga5"],"contents":"A deployer tool for Taiga.io project","permalink":"/extend/contributions/#taiga-deployer","tags":["vagrant","ansible","integration"],"title":"Taiga deployer"},{"categories":["taiga5"],"contents":"The Taiga plugin for FAS (Fedora Account System) authentication.","permalink":"/extend/contributions/#taiga-contrib-fas-openid-auth","tags":["auth","integration"],"title":"Taiga contrib FAS OpenID auth"},{"categories":["taiga5"],"contents":"TaigaPHP is a PHP wrapper used to handle the Taiga.io API easily","permalink":"/extend/contributions/#taiga-php","tags":["API","integration","php"],"title":"pythonphp"},{"categories":["taiga5"],"contents":"On Taiga PM you can read about some of the features of Taiga 5","permalink":"/extend/contributions/#taiga-pm","tags":["tutorial"],"title":"Taiga.pm"},{"categories":["taiga6"],"contents":"Taigo is a Go wrapper used to handle the Taiga.io API easily","permalink":"/extend/contributions/#taigo","tags":["API","integration","go","golang"],"title":"Taigo"}]